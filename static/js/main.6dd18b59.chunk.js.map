{"version":3,"sources":["functions/Utils.js","components/Loading.js","components/Chat.js","api/Request.js","containers/MessageRoomPage.js","containers/AskKeyPage.js","functions/UseScript.js","App.js","reportWebVitals.js","index.js"],"names":["padTo2Digits","num","toString","padStart","formatDate","date","getMonth","getDate","join","getHours","getMinutes","getSeconds","Loading","_jsxs","className","children","_jsx","Chat","_ref","audio","transcription","translation","chat","_useState","useState","_useState2","_slicedToArray","setTranscriptionTime","_useState3","_useState4","translationTime","setTranslationTime","_useState5","_useState6","chatTime","setChatTime","useEffect","Date","style","margin","controls","src","_Fragment","marginTop","chatgptModel","urlForWhisper","urlForChatgpt","validateApiKey","_x","_validateApiKey","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","apiKey","headers","jsonData","wrap","_context3","prev","next","concat","messages","model","axios","post","sent","abrupt","t0","console","log","stop","validateHfToken","_x2","_validateHfToken","_callee4","hfToken","fakeAudio","blob","_context4","createSilentAudio","Blob","type","response","data","error","checkModelStatus","_x3","_checkModelStatus","_callee5","_context5","status","sendAudioRequest","_ref2","_callee2","_context2","text","_x6","_x7","sendTranslationRequest","_x8","_x9","_sendTranslationRequest","_callee6","_context6","choices","message","content","sendChatRequest","_x10","_x11","_x12","_x13","_sendChatRequest","_callee7","translations","chats","i","_context7","length","push","MessageRoomPage","modelReady","setModelReady","audios","setAudios","transcriptions","setTranscriptions","_useState7","_useState8","setTranslations","_useState9","_useState10","setChats","_useState11","_useState12","sendRequests","_sendRequests","audioUrl","audioBlob","_toConsumableArray","addAudioElement","_callee","_context","URL","createObjectURL","checkModelStatusWrapper","_ref3","setTimeout","map","index","AudioRecorder","onRecordingComplete","disabled","onClick","name","fontSize","AskKeyPage","setApiKey","setHfToken","hfTokenRef","useRef","apiKeyRef","emptyInputRef","apiKeyValidRef","hfTokenValidRef","validator","apiKeyValid","hfTokenValid","current","value","display","handleKeyDown","event","key","handleClick","_ref4","onKeyDown","ref","useScript","url","integrity","async","undefined","crossOrigin","script","document","createElement","body","appendChild","removeChild","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.6dd18b59.chunk.js","sourcesContent":["import axios from \"axios\";\n\nfunction padTo2Digits(num) {\n  return num.toString().padStart(2, '0');\n}\n\nfunction formatDate(date) {\n  return (\n    [\n    //   date.getFullYear(),\n      padTo2Digits(date.getMonth() + 1),\n      padTo2Digits(date.getDate()),\n    ].join('/') +\n    ' ' +\n    [\n      padTo2Digits(date.getHours()),\n      padTo2Digits(date.getMinutes()),\n      padTo2Digits(date.getSeconds()),\n    ].join(':')\n  );\n}\n\n\nexport {formatDate};","import '../App.css';\nimport React from \"react\";\n\nconst Loading = () => {\n\treturn (\n\t\t<div className=\"spinner\">\n\t\t\t<div className=\"bounce1\"></div>\n\t\t\t<div className=\"bounce2\"></div>\n\t\t\t<div className=\"bounce3\"></div>\n\t\t</div>\t\t\t\t\t\t\n\t)\n}\n\nexport default Loading;","import '../App.css';\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\n\nimport {formatDate} from '../functions/Utils';\nimport Loading from './Loading';\n\nconst Chat = ({audio, transcription, translation, chat}) => {\n\tconst [transcriptionTime, setTranscriptionTime] = useState(\"\");\n\tconst [translationTime, setTranslationTime] = useState(\"\");\n\tconst [chatTime, setChatTime] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tconst date = new Date();\n\t\tsetTranscriptionTime(formatDate(date));\n\t}, [transcription]);\n\t\n\tuseEffect(() => {\n\t\tconst date = new Date();\n\t\tsetTranslationTime(formatDate(date));\n\t}, [translation])\n\n\tuseEffect(() => {\n\t\tconst date = new Date();\n\t\tsetChatTime(formatDate(date));\n\t}, [chat])\n\n\treturn (\n\t\t<div style={{margin:\"20px\"}}>\n\t\t\t{/* <div className='msg-inbox'>\n\t\t\t<div className='chats'> */}\n\t\t\t<div className='msg-page'>\n\t\t\t\t<div className=\"sent-chats\">\n\t\t\t\t\t<div className='sent-chats-msg'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t// Set this to be null to avoid situation that return is empty\n\t\t\t\t\t\taudio !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t<audio controls=\"True\" src={audio}></audio>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<Loading/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\ttranscription !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<p>{transcription}</p>\n\t\t\t\t\t\t\t\t{/* <span className=\"chat-time\">{transcriptionTime}</span> */}\n\t\t\t\t\t\t\t\t{translation !== null\n\t\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<p style={{marginTop:\"1px\"}}>{translation}</p>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"chat-time\">{translationTime}</span>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</>\t\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<Loading/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\taudio !== null\n\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t<Loading/>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='sent-chats-img'>\n\t\t\t\t\t\t<img className='chats-img' src=\"old.png\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* <div className=\"sent-chats\">\n\t\t\t\t\t{\n\t\t\t\t\ttranslation !== null\n\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='sent-chats-msg'>\n\t\t\t\t\t\t\t\t<div className='sent-msg-inbox'>\n\t\t\t\t\t\t\t\t\t<p>{translation}</p>\n\t\t\t\t\t\t\t\t\t<span className=\"chat-time\">{translationTime}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='sent-chats-img'>\n\t\t\t\t\t\t\t\t<img className='chats-img' src=\"chatgpt.png\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t: \n\t\t\t\t\t\t\ttranscription !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t<Loading/>\t\t\t\t\t\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t</div> */}\n\t\t\t\t<div className=\"received-chats\">\n\t\t\t\t\t{\n\t\t\t\t\tchat !== null\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='received-chats-img'>\n\t\t\t\t\t\t\t\t<img className='chats-img' src=\"chatgpt.png\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='received-msg'>\n\t\t\t\t\t\t\t\t<div className='received-msg-inbox'>\n\t\t\t\t\t\t\t\t\t<p>{chat}</p>\n\t\t\t\t\t\t\t\t\t<span className=\"chat-time\">{chatTime}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t: \n\t\t\t\t\t\ttranslation !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t<Loading/>\t\t\t\t\t\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t{/* </div>\n\t\t\t</div> */}\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default Chat;","import fs from \"fs\";\nimport axios from \"axios\";\n\nimport { createSilentAudio } from 'create-silent-audio';\n\n\nconst chatgptModel = \"gpt-3.5-turbo\";\nconst urlForWhisper = \"https://api-inference.huggingface.co/models/Evan-Lin/whisper-large-v1-tw\";\nconst urlForChatgpt = \"https://api.openai.com/v1/chat/completions\";\n\nconst whisperModel = \"whisper-1\";\n// const urlForWhisper = \"https://api.openai.com/v1/audio/transcriptions\";\nasync function validateApiKey(apiKey){\n  try{\n      const headers = {\n          \"content-type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n      };\n      const messages = [\n              {\"role\": \"user\", \"content\": \"Hello!\"}\n          ]\n      const jsonData = {messages: messages, model: chatgptModel}\n      const response = await axios.post(urlForChatgpt, jsonData, { headers:headers })\n      return true;\n  }\n  catch (error) {\n      console.log(error);\n      return false;\n  }\n}\n\nasync function validateHfToken(hfToken){\n    try{\n\t\tconst fakeAudio = createSilentAudio(5, 44100);\n        const blob = new Blob([fakeAudio], {type: \"audio/mp3\"});\n\n        const headers = {\n\t\t\t\"Authorization\": `Bearer ${hfToken}`\n\t\t};   \n\n\t\tconst response = await axios.post(urlForWhisper, blob, {\"headers\": headers})\n        return true\n\t}\n\tcatch (error){\n\t\tconsole.log(error.response.data.error);\n\t\tif (error.response.data.error === \"Authorization header is correct, but the token seems invalid\")\n\t\t\treturn false\n\t\telse \n\t\t\treturn true\n\t}\n}\n\nasync function checkModelStatus(hfToken){\n    try{\n\t\tconst fakeAudio = createSilentAudio(5, 44100);\n        const blob = new Blob([fakeAudio], {type: \"audio/mp3\"});\n\n        const headers = {\n\t\t\t\"Authorization\": `Bearer ${hfToken}`\n\t\t};   \n\n\t\tconst response = await axios.post(urlForWhisper, blob, {\"headers\": headers})\n\t\tconsole.log(response.status)\n        return true\n\t}\n\tcatch (error){\n        console.log(error)\n\t\tconsole.log(error.response.status);\n\t\tif (error.response.status === 503)\n\t\t\treturn false\n\t\telse \n\t\t\treturn true\n\t}\n}\n\nconst sendAudioRequestOpenAi = async function (blob, apiKey) {      \n    try{\n        const headers = {\n            \"content-type\":  \"multipart/form-data\",\n            \"Authorization\": `Bearer ${apiKey}`\n        //   \"Authorization\": `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        };    \n        const formData = new FormData();\n        formData.append(\"file\", blob , \"audio.mp3\")\n        formData.append(\"model\", whisperModel)\n        \n        const response = await axios.post(urlForWhisper, formData, {\"headers\": headers})\n        const transcription = response.data.text;    \n        return transcription\n    }\n    catch (error){\n        console.log(error);\n    }\n}\n\nconst sendAudioRequest = async function (blob, hfToken) {      \n    try{\n        const headers = {\n            \"Authorization\": `Bearer ${hfToken}`\n        };    \n        const response = await axios.post(urlForWhisper, blob, {\"headers\": headers})\n        const transcription = response.data.text;    \n        return transcription\n    }\n    catch (error){\n        console.log(error);\n    }\n}\n\nasync function sendTranslationRequest (transcription, apiKey) {\n    try{\n        const headers = {\n            \"content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${apiKey}`\n        };\n        const messages = [\n                // TODO\n                {\"role\": \"system\", \"content\": \"Rewrite the sentence into a fluent Traditional Chinese one\"},\n                {\"role\": \"user\", \"content\": transcription}\n            ]\n        const jsonData = {messages: messages, model: chatgptModel}\n        const response = await axios.post(urlForChatgpt, jsonData, { headers:headers })\n        console.log(messages)\n        const translation = response.data.choices[0].message.content\n        return translation;\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nasync function sendChatRequest(translation, translations, chats, apiKey) {\n    try {\n        const headers = {\n            \"content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${apiKey}`\n        };\n        const messages = [\n                 {\"role\": \"system\", \"content\": \"你是一個診前問診系統，病人會跟你說他目前的身體狀況，\\\n                                                病人通常會跟你講以下幾件事情:\\n\\n發病：什麼時候開始\\\n                                                注意到有症狀產生？誘發原因：症狀開始出現的時間點附近，\\\n                                                病人在什麼環境做了哪些事情？性質：症狀出現時的感覺、\\\n                                                症狀的特徵症狀散布：出現症狀的部位是否改變、或者隨著\\\n                                                身體的移動而有變化？嚴重程度：症狀何時最嚴重？有多嚴重？\\\n                                                \\n\\n請你利用獲得的訊息，來建立看診目標，可以從提出開放式\\\n                                                的問題開始，如果上述關於發病、誘發原因、性質、症狀散布、\\\n                                                嚴重程度有不清楚的地方，也可以請病人回答，然後觀察病人的\\\n                                                回覆，並給出建議。\"},\n            ]\n\n        console.log(translations)\n        // Multi-turn chats\n        // FIXME: setState() is async, so the translations here are not updated,\n        //        so constraint should be translations.length \n        //        to including the last translation\n        for (let i = 0; i < translations.length; i ++){\n            messages.push({\"role\": \"user\", \"content\": translations[i]});\n            messages.push({\"role\": \"assistant\", \"content\": chats[i]});\n        }\n        messages.push({\"role\": \"user\", \"content\": translation});\n        console.log(messages)\n        const jsonData = {messages: messages, model: chatgptModel}\n        const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n        const chat = response.data.choices[0].message.content\n        return chat;\n    }\n    catch (error){\n        console.log(error)\n    }\n}\n\nexport {validateApiKey, checkModelStatus, sendAudioRequest, sendChatRequest, sendTranslationRequest, sendAudioRequestOpenAi, validateHfToken};","import '../App.css';\nimport fs from \"fs\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState, useRef } from \"react\";\n\nimport { AudioRecorder } from 'react-audio-voice-recorder';\n\nimport Chat from '../components/Chat';\nimport Loading from '../components/Loading';\n\nimport { checkModelStatus, sendAudioRequest, sendTranslationRequest, sendChatRequest } from '../api/Request';\n\nconst MessageRoomPage = ({apiKey, hfToken}) => {\n\n    const [modelReady, setModelReady] = useState(false);\n    const [audios, setAudios] = useState([]);\n    const [transcriptions, setTranscriptions] = useState([]);\n    const [translations, setTranslations] = useState([]);\n    const [chats, setChats] = useState([]);\n    const [audioClickAble, setAudioClickAble] = useState(false);\n    \n    async function sendRequests (audioUrl, audioBlob){\n        const transcription = await sendAudioRequest(audioBlob, hfToken);\n        setTranscriptions([...transcriptions, transcription]);\n\n        const translation = await sendTranslationRequest(transcription, apiKey);\n        setTranslations([...translations, translation])\n\n        const chat = await sendChatRequest(translation, translations, chats, apiKey);\n        setChats([...chats, chat])\n    }\n\n    const addAudioElement = async function (audioBlob) {\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudios([...audios, audioUrl]);\n\n        // enforce the length of three lists are equal\n        setTranscriptions([...transcriptions, null]);\n        setTranslations([...translations, null]);\n        setChats([...chats, null]);\n\n        await sendRequests(audioUrl, audioBlob);\n    };\n\n    const resetConversation = () => {\n        setAudios([]);\n        setTranscriptions([]);\n        setTranslations([]);\n        setChats([]);\n    }\n\n    useEffect(() => {\n        const checkModelStatusWrapper = async() =>{\n            const response = await checkModelStatus(hfToken)  \n            console.log(response)\n            if (response === true) \n                setModelReady(true)\n            else\n                setTimeout(checkModelStatusWrapper, 8000);\n            \n            return response      \n        }\n        checkModelStatusWrapper();\n    }, []);\n\n    return (\n        <div className=\"App\" style={{marginTop:\"30px\"}}>\n            {\n            modelReady \n            ?\n                <>\n                <div className='msg-container'>\n                {\n                audios.map((audio, index)=> (\n                    <Chat key={index} audio={audios[index]} transcription={transcriptions[index]} \n                            translation={translations[index]} chat={chats[index]}/>\n                ))\n                }\n                </div>\n                <div className='bottom-line'></div>\n                <div className='bottom-line-button'>\n                    <AudioRecorder onRecordingComplete={addAudioElement}/>\n                    <button className='circle-button' disabled={false}  onClick={resetConversation}>\n                        <ion-icon name=\"trash\" style={{fontSize: \"17px\"}}></ion-icon>\n                    </button>\n                </div>\n                </>\n            :\n                <div className='center'>\n                <h2>Wait for model loading</h2>\n                <Loading/>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default MessageRoomPage;\n","import '../App.css';\nimport React from \"react\";\nimport { useRef, useState } from \"react\";\n\nimport { validateApiKey, validateHfToken } from '../api/Request';\n\nconst AskKeyPage = ({setApiKey, setHfToken}) => {\n\n    const hfTokenRef = useRef();\n    const apiKeyRef = useRef();\n    const emptyInputRef = useRef();\n    const apiKeyValidRef = useRef();\n    const hfTokenValidRef = useRef();\n\n    const validator = async () => {\n        try{\n            const apiKey = apiKeyRef.current.value\n            const hfToken = hfTokenRef.current.value\n            if (apiKey.length === 0 || hfToken.length === 0){\n                emptyInputRef.current.style.display = \"inline\";\n                apiKeyValidRef.current.style.display = \"none\";\n                hfTokenValidRef.current.style.display = \"none\";                    \n                return\n            }\n            else \n                emptyInputRef.current.style.display = \"none\";\n            \n            const apiKeyValid = await validateApiKey(apiKey);\n            const hfTokenValid = await validateHfToken(hfToken)\n            // const apiKeyValid = true;\n            // const hfTokenValid = true;\n            \n            if (apiKeyValid === true && hfTokenValid === true){\n                setApiKey(apiKey)\n                setHfToken(hfToken)\n                apiKeyValidRef.current.style.display = \"none\";\n                hfTokenValidRef.current.style.display = \"none\";\n            }\n            else {\n                if (apiKeyValid === false) \n                    apiKeyValidRef.current.style.display = \"inline\";\n                else \n                    apiKeyValidRef.current.style.display = \"none\";\n                if (hfTokenValid === false)\n                    hfTokenValidRef.current.style.display = \"inline\";\n                else\n                    hfTokenValidRef.current.style.display = \"none\";\n            }\n        }\n        catch (error){\n            console.log(error)\n        }\n    }\n\n    const handleKeyDown = async (event) => {\n        if (event.key === \"Enter\")\n            validator()\n    }\n\n    const handleClick = async (event) => {\n        validator()\n    }\n\n    return (\n        <div className=\"App ask-key-container\" >\n            <h2>診前問診系統</h2>\n            <br/><br/>\n            <div className='ask-key-component'>\n                <span>\n                    OpenAI Api Key : &nbsp; &emsp;&nbsp;<input type=\"text\" onKeyDown={handleKeyDown} ref={apiKeyRef}/>\n                </span>\n                <br/><br/>\n                <span>\n                    Huggingface Token : &nbsp;<input type=\"text\" onKeyDown={handleKeyDown} ref={hfTokenRef}/>\n                </span>\n            </div>\n            <br/><br/>\n            <button onClick={handleClick}>確認</button>\n            <div className=\"error\" ref={emptyInputRef} style={{\"display\": \"none\"}}>\n                <h3 style={{\"color\":\"red\"}}>Error!</h3>\n                <p style={{\"color\":\"red\"}}>Please ensure that both two input box are filled</p>\n            </div> \n            <div className=\"error\" ref={apiKeyValidRef} style={{\"display\": \"none\"}}>\n                <h3 style={{\"color\":\"red\"}}>Error!</h3>\n                <p style={{\"color\":\"red\"}}>Please ensure that a correct OpenAI apikey is provided</p>\n            </div> \n            <div className=\"error\" ref={hfTokenValidRef} style={{\"display\": \"none\"}}>\n                <h3 style={{\"color\":\"red\"}}>Error!</h3>\n                <p style={{\"color\":\"red\"}}>Please ensure that a correct huggingface token is provided</p>\n            </div> \n        </div>\n    );\n}\n\nexport default AskKeyPage;\n","import { useEffect } from \"react\"\n\nconst useScript = (url, integrity, async = true, crossOrigin = \"anonymous\") => {\n  useEffect(() => {\n    const script = document.createElement(\"script\")\n\n    script.src = url\n\n    script.async = async\n\n    if (integrity) {\n      script.integrity = integrity\n    }\n\n    script.crossOrigin = crossOrigin\n\n    document.body.appendChild(script)\n\n    return () => {\n      document.body.removeChild(script)\n    }\n  }, [url, integrity, async, crossOrigin])\n}\n\nexport default useScript","import './App.css';\nimport React from \"react\";\n// import dotenv_defaults from \"dotenv-defaults\";\nimport { useEffect, useState } from \"react\";\n\nimport MessageRoomPage from \"./containers/MessageRoomPage\"\nimport AskKeyPage from './containers/AskKeyPage';\nimport useScript from './functions/UseScript';\n// dotenv_defaults.config();\n\nfunction App() {\n\n    // useScript(\"https://cdn.jsdelivr.net/npm/ionicons/dist/ionicons/ionicons.esm.js\")\n    useScript(\"https://cdn.jsdelivr.net/npm/ionicons/dist/ionicons/ionicons.js\")\n    const [apiKey, setApiKey] = useState(\"\");\n    const [hfToken, setHfToken] = useState(\"\");\n\n    return (\n        <div className=\"App\" style={{marginTop:\"30px\"}}>\n            { apiKey.length && hfToken.length\n                ?\n                <MessageRoomPage apiKey={apiKey} hfToken={hfToken}/>\n                :\n                <AskKeyPage setApiKey={setApiKey} setHfToken={setHfToken}/>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}