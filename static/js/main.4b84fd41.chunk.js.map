{"version":3,"sources":["functions/Utils.js","components/Loading.js","components/Chat.js","components/Clinic.js","components/ReportViewer.js","data/ClinicSchedule.js","api/Request.js","containers/MessageRoomPage.js","containers/AskKeyPage.js","functions/UseScript.js","App.js","reportWebVitals.js","index.js"],"names":["padTo2Digits","num","toString","padStart","formatDate","date","getMonth","getDate","join","getHours","getMinutes","getSeconds","disableButton","buttonRef","current","style","cursor","pointerEvents","opacity","enableButton","a","document","createElement","body","appendChild","scrollToBottom","window","scrollTo","scrollHeight","Loading","_jsxs","className","children","_jsx","Chat","_ref","audio","transcription","translation","chat","_useState","useState","_useState2","_slicedToArray","setTranscriptionTime","_useState3","_useState4","translationTime","setTranslationTime","_useState5","_useState6","chatTime","setChatTime","useEffect","Date","margin","controls","src","_Fragment","marginTop","Clinic","clinic","length","Font","register","family","styles","StyleSheet","create","page","padding","fontSize","fontFamily","display","title","color","fontWeight","paddingBottom","marginBottom","textAlign","letterSpacing","text","lineHeight","ReportViewer","translations","chats","summary","Document","Page","size","View","flexDirection","justifyContent","flexWrap","Text","textLine","lines","split","console","log","i","_lines$i$match","subline","match","j","addNewline","ClinicSchedule","chatgptModel","urlForChatgpt","corsApiKey","urlForWhisper","concat","validateApiKey","_x","_validateApiKey","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","apiKey","headers","jsonData","wrap","_context4","prev","next","messages","model","axios","post","sent","abrupt","t0","stop","validateHfToken","_x2","_validateHfToken","_callee5","hfToken","fakeAudio","blob","_context5","createSilentAudio","Blob","type","response","data","error","checkModelStatus","_x3","_checkModelStatus","_callee6","_context6","status","sendAudioRequest","_ref3","_callee3","_context3","_x7","_x8","sendTranslationRequest","_x9","_x10","_sendTranslationRequest","_callee7","_response2","_translation","_context7","choices","message","content","sendChatRequest","_x11","_x12","_x13","_x14","_sendChatRequest","_callee8","_response3","_chat","_context8","push","sendSummaryRequest","_x15","_x16","_sendSummaryRequest","_callee9","_response4","_chat2","_context9","sendClinicRequest","_x17","_x18","_sendClinicRequest","_callee10","_response5","_chat3","_context10","MessageRoomPage","setApiKey","setHfToken","modelReady","setModelReady","audios","setAudios","transcriptions","setTranscriptions","_useState7","_useState8","setTranslations","_useState9","_useState10","setChats","_useState11","_useState12","setSummary","_useState13","_useState14","setClinic","summaryButtonRef","useRef","reportLoadingRef","bottomLineRef","recordButtonRef","clearButtonRef","sendRequests","_sendRequests","audioUrl","audioBlob","_toConsumableArray","addAudioElement","_ref2","_callee","_context","URL","createObjectURL","setTimeout","generateReport","_callee2","_context2","clearConversation","checkModelStatusWrapper","_ref4","map","index","ref","onClick","AudioRecorder","onRecordingComplete","name","PDFViewer","fileName","PDFDownloadLink","_ref5","url","loading","AskKeyPage","hfTokenRef","apiKeyRef","emptyInputRef","apiKeyValidRef","hfTokenValidRef","validator","apiKeyValid","hfTokenValid","value","handleKeyDown","event","key","handleClick","onKeyDown","useScript","integrity","async","undefined","crossOrigin","script","removeChild","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"uWACA,SAASA,EAAaC,GACpB,OAAOA,EAAIC,WAAWC,SAAS,EAAG,IACpC,CAEA,SAASC,EAAWC,GAClB,MACE,CAEEL,EAAaK,EAAKC,WAAa,GAC/BN,EAAaK,EAAKE,YAClBC,KAAK,KACP,IACA,CACER,EAAaK,EAAKI,YAClBT,EAAaK,EAAKK,cAClBV,EAAaK,EAAKM,eAClBH,KAAK,IAEX,CAEA,SAASI,EAAcC,GACrBA,EAAUC,QAAQC,MAAMC,OAAS,cACjCH,EAAUC,QAAQC,MAAME,cAAgB,OACxCJ,EAAUC,QAAQC,MAAMG,QAAU,KACpC,CAEA,SAASC,EAAaN,GACpBA,EAAUC,QAAQC,MAAMC,OAAS,UACjCH,EAAUC,QAAQC,MAAME,cAAgB,OACxCJ,EAAUC,QAAQC,MAAMG,QAAU,GACpC,EAOsB,WACpB,IAAIE,EAAIC,SAASC,cAAc,KAC/BD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAEL,MAAQ,eAOZ,CAVsB,GALtB,IAiBMU,EAAiB,WACrBC,OAAOC,SAAS,EAAGN,SAASE,KAAKK,aACnC,E,WCvCeC,EAVC,WACf,OACCC,eAAA,OAAKC,UAAU,UAASC,SAAA,CACvBC,cAAA,OAAKF,UAAU,YACfE,cAAA,OAAKF,UAAU,YACfE,cAAA,OAAKF,UAAU,cAGlB,ECiHeG,EArHF,SAAHC,GAAmD,IAA9CC,EAAKD,EAALC,MAAOC,EAAaF,EAAbE,cAAeC,EAAWH,EAAXG,YAAaC,EAAIJ,EAAJI,KACjDC,EAAkDC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAApCI,GAAFF,EAAA,GAAsBA,EAAA,IAC9CG,EAA8CJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,EAAgCR,mBAAS,IAAGS,EAAAP,YAAAM,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAiB5B,OAfAG,qBAAU,WACT,IAAMhD,EAAO,IAAIiD,KACjBV,EAAqBxC,EAAWC,GACjC,GAAG,CAACgC,IAEJgB,qBAAU,WACT,IAAMhD,EAAO,IAAIiD,KACjBN,EAAmB5C,EAAWC,GAC/B,GAAG,CAACiC,IAEJe,qBAAU,WACT,IAAMhD,EAAO,IAAIiD,KACjBF,EAAYhD,EAAWC,GACxB,GAAG,CAACkC,IAGHN,cAAA,OAAKlB,MAAO,CAACwC,OAAO,QAAQvB,SAG3BF,eAAA,OAAKC,UAAU,WAAUC,SAAA,CACxBF,eAAA,OAAKC,UAAU,aAAYC,SAAA,CAC1BF,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAGpB,OAAVI,EAEEH,cAAA,SAAOuB,SAAS,OAAOC,IAAKrB,IAE5BH,cAACJ,EAAO,IAGQ,OAAlBQ,EAECP,eAAA4B,WAAA,CAAA1B,SAAA,CACCC,cAAA,KAAAD,SAAIK,IAEa,OAAhBC,EAECR,eAAA4B,WAAA,CAAA1B,SAAA,CACCC,cAAA,KAAGlB,MAAO,CAAC4C,UAAU,OAAO3B,SAAEM,IAC9BL,cAAA,QAAMF,UAAU,YAAWC,SAAEe,OAG9Bd,cAACJ,EAAO,OAID,OAAVO,EAEEH,cAACJ,EAAO,IAERI,cAAAyB,WAAA,OAGJzB,cAAA,OAAKF,UAAU,iBAAgBC,SAC9BC,cAAA,OAAKF,UAAU,YAAY0B,IAAI,iBA0BjCxB,cAAA,OAAKF,UAAU,iBAAgBC,SAErB,OAATO,EAECT,eAAA4B,WAAA,CAAA1B,SAAA,CACCC,cAAA,OAAKF,UAAU,qBAAoBC,SAClCC,cAAA,OAAKF,UAAU,YAAY0B,IAAI,kBAEhCxB,cAAA,OAAKF,UAAU,eAAcC,SAC5BF,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CAClCC,cAAA,KAAAD,SAAIO,IACJN,cAAA,QAAMF,UAAU,YAAWC,SAAEmB,YAKhB,OAAhBb,EAEEL,cAACJ,EAAO,IAERI,cAAAyB,WAAA,UASR,ECrFeE,EAhCA,SAAHzB,GAAkB,IAAb0B,EAAM1B,EAAN0B,OAEhB,OACC5B,cAAA,OAAKlB,MAAO,CAACwC,OAAO,QAAQvB,SAC3BC,cAAA,OAAKF,UAAU,WAAUC,SACxBC,cAAA,OAAKF,UAAU,eAAcC,SAE5B6B,EAAOC,OAAS,EAEfhC,eAAA4B,WAAA,CAAA1B,SAAA,CACCC,cAAA,OAAKF,UAAU,qBAAoBC,SAClCC,cAAA,OAAKF,UAAU,aAAa0B,IAAI,kBAEjCxB,cAAA,OAAKF,UAAU,aAAYC,SAC1BC,cAAA,OAAKF,UAAU,qBAAoBC,SAClCC,cAAA,KAAAD,SAAI6B,WAKP/B,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACvBC,cAAA,MAAAD,SAAI,+BACJC,cAACJ,EAAO,YAQd,EC1BAkC,IAAKC,SAAS,CACVC,OAAQ,qBACRR,IAAK,2BAIT,IAAMS,EAASC,IAAWC,OAAO,CAC7BC,KAAM,CACFC,QAAS,GACTC,SAAU,GAChBC,WAAY,qBACNC,QAAS,SAEbC,MAAO,CACHC,MAAO,OACPC,WAAY,OACZC,cAAe,EACfC,aAAc,GACdP,SAAU,GACVQ,UAAW,SACXC,cAAe,OAEnBC,KAAM,CAEFV,SAAU,GACVS,cAAe,MACfE,WAAY,WAiCLC,EA7BM,SAAHhD,GAAiBA,EAAZiD,aAAmBjD,EAALkD,MAAqB,IAAdC,EAAOnD,EAAPmD,QAY3C,OACGrD,cAACsD,IAAQ,CAAAvD,SACLC,cAACuD,IAAI,CAACC,KAAK,KAAK1E,MAAOmD,EAAOG,KAAKrC,SAC/BF,eAAC4D,IAAI,CAAC3E,MAAO,CAAC4E,cAAc,SAAUC,eAAgB,gBAAiBC,SAAU,QAAQ7D,SAAA,CACrFC,cAACyD,IAAI,CAAC3E,MAAOmD,EAAOQ,MAAM1C,SAC1BC,cAAC6D,IAAI,CAAA9D,SAAC,yCAENC,cAACyD,IAAI,CAAC3E,MAAOmD,EAAOe,KAAKjD,SACzBC,cAAC6D,IAAI,CAAA9D,SAnBE,SAACiD,GAChB,IAAIc,EAAW,GACTC,EAASf,EAAKgB,MAAM,MAC1BC,QAAQC,IAAIH,GACZ,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAMlC,OAAQsC,IAE9B,IAFmC,IAADC,EAC5BC,EAAoC,QAA7BD,EAAGL,EAAMI,GAAGG,MAAM,mBAAW,IAAAF,IAAI,GACrCG,EAAI,EAAGA,EAAIF,EAAQxC,OAAQ0C,IAChCT,GAAYO,EAAQE,GAAK,KAEjC,OAAOT,CACX,CASmBU,CAAWnB,aAOlC,E,iBCtCeoB,EA5BQ,CACtB,iNACA,qMACA,2MACA,qMACA,qOACA,qPACA,yNACA,0OACA,0OACA,oMACA,iQACA,sMACA,gMACA,0MACA,sMACA,qMACA,0RACA,8NACA,qSACA,sMACA,4MACA,qMACA,4MACA,wNACA,iNCnBKC,EAAe,gBACfC,EAAgB,6CAIhBC,EAAa,wCAKbC,EAAa,GAAAC,OAJD,8CAIgB,sEAQlC,SAEeC,EAAcC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,UAAAF,IAiB5B,OAjB4BA,EAAAG,YAAAC,cAAAC,MAA7B,SAAAC,EAA8BC,GAAQ,IAAFC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAE,cAAFA,EAAAC,KAAAD,EAAAE,MAAE,KAAF,EAS4B,OAT5BF,EAAAC,KAAA,EAExBJ,EAAU,CACZ,eAAgB,mBAChB,cAAgB,UAADX,OAAYU,IAKzBE,EAAW,CAACK,SAHD,CACT,CAAC,KAAQ,OAAQ,QAAW,WAEEC,MAAOtB,GAAakB,EAAAE,KAAA,EACnCG,IAAMC,KAAKvB,EAAee,EAAU,CAAED,QAAQA,IAAU,OAAjE,OAAAG,EAAAO,KAAAP,EAAAQ,OAAA,UACP,GAAI,QAGQ,OAHRR,EAAAC,KAAA,GAAAD,EAAAS,GAAAT,EAAA,SAGX3B,QAAQC,IAAG0B,EAAAS,IAAQT,EAAAQ,OAAA,UACZ,GAAK,yBAAAR,EAAAU,OAAA,GAAAf,EAAA,oBAEjBL,MAAA,KAAAC,UAAA,UAEcoB,EAAeC,GAAA,OAAAC,EAAAvB,MAAC,KAADC,UAAA,UAAAsB,IAqB7B,OArB6BA,EAAArB,YAAAC,cAAAC,MAA9B,SAAAoB,EAA+BC,GAAS,IAAFC,EAAAC,EAAApB,EAAA,OAAAJ,cAAAM,MAAA,SAAAmB,GAAE,cAAFA,EAAAjB,KAAAiB,EAAAhB,MAAE,KAAF,EASnC,OATmCgB,EAAAjB,KAAA,EAE9Be,EAAYG,4BAAkB,EAAG,OAC3BF,EAAO,IAAIG,KAAK,CAACJ,GAAY,CAACK,KAAM,2BAEpCxB,EAAU,CACrB,cAAgB,UAADX,OAAY6B,GAClB,eAAgB,yBAChB,iBAAkB/B,GAC3BkC,EAAAhB,KAAA,EAEsBG,IAAMC,KAAKrB,EAAegC,EAAM,CAAC,QAAWpB,IAAS,OAA9D,OAAAqB,EAAAX,KAAAW,EAAAV,OAAA,UACD,GAAI,QAGsB,GAHtBU,EAAAjB,KAAA,GAAAiB,EAAAT,GAAAS,EAAA,SAGjB7C,QAAQC,IAAI4C,EAAAT,GAAMa,SAASC,KAAKC,OACE,iEAA9BN,EAAAT,GAAMa,SAASC,KAAKC,MAAwE,CAAAN,EAAAhB,KAAA,gBAAAgB,EAAAV,OAAA,UACxF,GAAK,eAAAU,EAAAV,OAAA,UAEL,GAAI,yBAAAU,EAAAR,OAAA,GAAAI,EAAA,oBAEbxB,MAAA,KAAAC,UAAA,UAEckC,EAAgBC,GAAA,OAAAC,EAAArC,MAAC,KAADC,UAAA,UAAAoC,IAuB9B,OAvB8BA,EAAAnC,YAAAC,cAAAC,MAA/B,SAAAkC,EAAgCb,GAAS,IAAFC,EAAAC,EAAApB,EAAAyB,EAAA,OAAA7B,cAAAM,MAAA,SAAA8B,GAAE,cAAFA,EAAA5B,KAAA4B,EAAA3B,MAAE,KAAF,EASpC,OAToC2B,EAAA5B,KAAA,EAE/Be,EAAYG,4BAAkB,EAAG,OAC3BF,EAAO,IAAIG,KAAK,CAACJ,GAAY,CAACK,KAAM,2BAEpCxB,EAAU,CACrB,cAAgB,UAADX,OAAY6B,GAClB,eAAgB,yBAChB,iBAAkB/B,GAC3B6C,EAAA3B,KAAA,EAEsBG,IAAMC,KAAKrB,EAAegC,EAAM,CAAC,QAAWpB,IAAS,OAChD,OADtByB,EAAQO,EAAAtB,KACdlC,QAAQC,IAAIgD,EAASQ,QAAOD,EAAArB,OAAA,UACf,GAAI,QAIkB,GAJlBqB,EAAA5B,KAAA,GAAA4B,EAAApB,GAAAoB,EAAA,SAGXxD,QAAQC,IAAGuD,EAAApB,IACjBpC,QAAQC,IAAIuD,EAAApB,GAAMa,SAASQ,QACG,MAA1BD,EAAApB,GAAMa,SAASQ,OAAc,CAAAD,EAAA3B,KAAA,gBAAA2B,EAAArB,OAAA,UACzB,GAAK,eAAAqB,EAAArB,OAAA,UAEL,GAAI,yBAAAqB,EAAAnB,OAAA,GAAAkB,EAAA,oBAEbtC,MAAA,KAAAC,UAAA,CAED,IA8CMwC,EAAgB,eAAAC,EAAAxC,YAAAC,cAAAC,MAAG,SAAAuC,EAAgBhB,EAAMF,GAAO,IAAAlB,EAAAyB,EAAA9G,EAAA,OAAAiF,cAAAM,MAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OA4B9C,OA5B8CgC,EAAAjC,KAAA,EAoBxCJ,EAAU,CACZ,cAAgB,UAADX,OAAY6B,GAE3B,eAAgB,yBAChB,OAAU,oBAIdmB,EAAAhC,KAAA,EAGuBG,IAAMC,KAAKrB,EAAegC,EAAM,CAAC,QAAWpB,IAAS,OACnC,OADnCyB,EAAQY,EAAA3B,KACR/F,EAAgB8G,EAASC,KAAKnE,KAAI8E,EAAA1B,OAAA,SACjChG,GAAa,OAAA0H,EAAAjC,KAAA,EAAAiC,EAAAzB,GAAAyB,EAAA,SAGpB7D,QAAQC,IAAG4D,EAAAzB,IAAQ,yBAAAyB,EAAAxB,OAAA,GAAAuB,EAAA,kBAE1B,gBAtCqBE,EAAAC,GAAA,OAAAJ,EAAA1C,MAAA,KAAAC,UAAA,KAsCrB,SAEc8C,EAAsBC,EAAAC,GAAA,OAAAC,EAAAlD,MAAA,KAAAC,UAAA,UAAAiD,IA0BpC,OA1BoCA,EAAAhD,YAAAC,cAAAC,MAArC,SAAA+C,EAAuCjI,EAAeoF,GAAM,IAAAC,EAAAC,EAAAwB,EAAA7G,EAAAiI,EAAAC,EAAA,OAAAlD,cAAAM,MAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAUE,OATpDL,EAAU,CACZ,eAAgB,mBAChB,cAAgB,UAADX,OAAYU,IAOzBE,EAAW,CAACK,SALD,CAET,CAAC,KAAQ,SAAU,QAAW,8DAC9B,CAAC,KAAQ,OAAQ,QAAW3F,IAEE4F,MAAOtB,GAAa8D,EAAA3C,KAAA,EAAA2C,EAAA1C,KAAA,EAE/BG,IAAMC,KAAKvB,EAAee,EAAU,CAAED,QAAQA,IAAU,OACnB,OADtDyB,EAAQsB,EAAArC,KACR9F,EAAc6G,EAASC,KAAKsB,QAAQ,GAAGC,QAAQC,QAAOH,EAAApC,OAAA,SACrD/F,GAAW,QAGC,GAHDmI,EAAA3C,KAAA,GAAA2C,EAAAnC,GAAAmC,EAAA,SAGlBvE,QAAQC,IAAGsE,EAAAnC,IACmB,MAA1BmC,EAAAnC,GAAMa,SAASQ,OAAc,CAAAc,EAAA1C,KAAA,gBAAA0C,EAAA1C,KAAA,GACNG,IAAMC,KAAKvB,EAAee,EAAU,CAAED,QAAQA,IAAU,QACnB,OADtDyB,EAAQsB,EAAArC,KACR9F,EAAc6G,EAASC,KAAKsB,QAAQ,GAAGC,QAAQC,QAAOH,EAAApC,OAAA,SACrD/F,GAAW,eAAAmI,EAAApC,OAAA,SAGX,IAAE,yBAAAoC,EAAAlC,OAAA,GAAA+B,EAAA,oBAEpBnD,MAAA,KAAAC,UAAA,UAEcyD,EAAeC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAA/D,MAAC,KAADC,UAAA,UAAA8D,IA4C7B,OA5C6BA,EAAA7D,YAAAC,cAAAC,MAA9B,SAAA4D,EAA+B7I,EAAa8C,EAAcC,EAAOoC,GAAM,IAAAC,EAAAM,EAAA5B,EAAAuB,EAAAwB,EAAA5G,EAAA6I,EAAAC,EAAA,OAAA/D,cAAAM,MAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,OAsBnE,IArBML,EAAU,CACZ,eAAgB,mBAChB,cAAgB,UAADX,OAAYU,IAEzBO,EAAW,CACL,CAAC,KAAQ,SAAU,QAAW,k4DAY1C9B,QAAQC,IAAIf,GAIHgB,EAAI,EAAGA,EAAIhB,EAAatB,OAAQsC,IACrC4B,EAASuD,KAAK,CAAC,KAAQ,OAAQ,QAAWnG,EAAagB,KACvD4B,EAASuD,KAAK,CAAC,KAAQ,YAAa,QAAWlG,EAAMe,KAIC,OAF1D4B,EAASuD,KAAK,CAAC,KAAQ,OAAQ,QAAWjJ,IAC1C4D,QAAQC,IAAI6B,GACNL,EAAW,CAACK,SAAUA,EAAUC,MAAOtB,GAAa2E,EAAAxD,KAAA,EAAAwD,EAAAvD,KAAA,GAE/BG,IAAMC,KAAKvB,EAAee,EAAU,CAACD,QAASA,IAAU,QAC1B,OAD/CyB,EAAQmC,EAAAlD,KACR7F,EAAO4G,EAASC,KAAKsB,QAAQ,GAAGC,QAAQC,QAAOU,EAAAjD,OAAA,SAC9C9F,GAAI,QAGO,GAHP+I,EAAAxD,KAAA,GAAAwD,EAAAhD,GAAAgD,EAAA,SAGXpF,QAAQC,IAAGmF,EAAAhD,IACmB,MAA1BgD,EAAAhD,GAAMa,SAASQ,OAAc,CAAA2B,EAAAvD,KAAA,gBAAAuD,EAAAvD,KAAA,GACNG,IAAMC,KAAKvB,EAAee,EAAU,CAACD,QAASA,IAAU,QAC1B,OAD/CyB,EAAQmC,EAAAlD,KACR7F,EAAO4G,EAASC,KAAKsB,QAAQ,GAAGC,QAAQC,QAAOU,EAAAjD,OAAA,SAC9C9F,GAAI,eAAA+I,EAAAjD,OAAA,SAGJ,IAAE,yBAAAiD,EAAA/C,OAAA,GAAA4C,EAAA,oBAEpBhE,MAAA,KAAAC,UAAA,UAEcoE,EAAkBC,EAAAC,GAAA,OAAAC,EAAAxE,MAAC,KAADC,UAAA,UAAAuE,IAmChC,OAnCgCA,EAAAtE,YAAAC,cAAAC,MAAjC,SAAAqE,EAAkCxG,EAAcqC,GAAM,IAAAC,EAAAM,EAAA5B,EAAAuB,EAAAwB,EAAA5G,EAAAsJ,EAAAC,EAAA,OAAAxE,cAAAM,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAAhE,MAAA,OAelD,IAdML,EAAU,CACZ,eAAgB,mBAChB,cAAgB,UAADX,OAAYU,KAEzBO,EAAW,CACL,CAAC,KAAQ,SAAU,QAAW,o5BAOjCuD,KAAK,CAAC,KAAQ,OAAQ,QAAW,yCAEjCnF,EAAI,EAAGA,EAAIhB,EAAatB,OAAQsC,IACrC4B,EAASuD,KAAK,CAAC,KAAQ,OAAQ,QAAWnG,EAAagB,KAGD,OAD1DF,QAAQC,IAAI6B,GACNL,EAAW,CAACK,SAAUA,EAAUC,MAAOtB,GAAaoF,EAAAjE,KAAA,EAAAiE,EAAAhE,KAAA,EAE/BG,IAAMC,KAAKvB,EAAee,EAAU,CAACD,QAASA,IAAU,OAC1B,OAD/CyB,EAAQ4C,EAAA3D,KACR7F,EAAO4G,EAASC,KAAKsB,QAAQ,GAAGC,QAAQC,QAAOmB,EAAA1D,OAAA,SAC9C9F,GAAI,QAGO,GAHPwJ,EAAAjE,KAAA,GAAAiE,EAAAzD,GAAAyD,EAAA,SAGX7F,QAAQC,IAAG4F,EAAAzD,IACmB,MAA1ByD,EAAAzD,GAAMa,SAASQ,OAAc,CAAAoC,EAAAhE,KAAA,gBAAAgE,EAAAhE,KAAA,GACNG,IAAMC,KAAKvB,EAAee,EAAU,CAACD,QAASA,IAAU,QAC1B,OAD/CyB,EAAQ4C,EAAA3D,KACR7F,EAAO4G,EAASC,KAAKsB,QAAQ,GAAGC,QAAQC,QAAOmB,EAAA1D,OAAA,SAC9C9F,GAAI,eAAAwJ,EAAA1D,OAAA,SAGJ,IAAE,yBAAA0D,EAAAxD,OAAA,GAAAqD,EAAA,oBAEpBzE,MAAA,KAAAC,UAAA,UAEc4E,EAAiBC,EAAAC,GAAA,OAAAC,EAAAhF,MAAC,KAADC,UAAA,UAAA+E,IAmC/B,OAnC+BA,EAAA9E,YAAAC,cAAAC,MAAhC,SAAA6E,EAAiC9G,EAASmC,GAAM,IAAAC,EAAAM,EAAA5B,EAAAuB,EAAAwB,EAAA5G,EAAA8J,EAAAC,EAAA,OAAAhF,cAAAM,MAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,OAe5C,IAdML,EAAU,CACZ,eAAgB,mBAChB,cAAgB,UAADX,OAAYU,KAEzBO,EAAW,CACL,CAAC,KAAQ,SAAU,QAAW,8dAKjCuD,KAAK,CAAC,KAAQ,OAAQ,QAAW,yCAC1CvD,EAASuD,KAAK,CAAC,KAAQ,OAAQ,QAAWjG,IAE1C0C,EAASuD,KAAK,CAAC,KAAQ,OAAQ,QAAW,yCACjCnF,EAAI,EAAGA,EAAIM,EAAe5C,OAAQsC,IACvC4B,EAASuD,KAAK,CAAC,KAAQ,OAAQ,QAAW7E,EAAeN,KAGH,OAD1DF,QAAQC,IAAI6B,GACNL,EAAW,CAACK,SAAUA,EAAUC,MAAOtB,GAAa4F,EAAAzE,KAAA,EAAAyE,EAAAxE,KAAA,GAE/BG,IAAMC,KAAKvB,EAAee,EAAU,CAACD,QAASA,IAAU,QAC1B,OAD/CyB,EAAQoD,EAAAnE,KACR7F,EAAO4G,EAASC,KAAKsB,QAAQ,GAAGC,QAAQC,QAAO2B,EAAAlE,OAAA,SAC9C9F,GAAI,QAGO,GAHPgK,EAAAzE,KAAA,GAAAyE,EAAAjE,GAAAiE,EAAA,SAGXrG,QAAQC,IAAGoG,EAAAjE,IACmB,MAA1BiE,EAAAjE,GAAMa,SAASQ,OAAc,CAAA4C,EAAAxE,KAAA,gBAAAwE,EAAAxE,KAAA,GACNG,IAAMC,KAAKvB,EAAee,EAAU,CAACD,QAASA,IAAU,QAC1B,OAD/CyB,EAAQoD,EAAAnE,KACR7F,EAAO4G,EAASC,KAAKsB,QAAQ,GAAGC,QAAQC,QAAO2B,EAAAlE,OAAA,SAC9C9F,GAAI,eAAAgK,EAAAlE,OAAA,SAGJ,IAAE,yBAAAkE,EAAAhE,OAAA,GAAA6D,EAAA,oBAEpBjF,MAAA,KAAAC,UAAA,CCpTD,IAgLeoF,EAhLS,SAAHrK,GAAkD,IAA7CsF,EAAMtF,EAANsF,OAAQmB,EAAOzG,EAAPyG,QAAS6D,EAAStK,EAATsK,UAAWC,EAAUvK,EAAVuK,WAElDlK,EAAoCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA5CmK,EAAUjK,EAAA,GAAEkK,EAAalK,EAAA,GAChCG,EAA4BJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAAjCgK,EAAM/J,EAAA,GAAEgK,EAAShK,EAAA,GACxBG,EAA4CR,mBAAS,IAAGS,EAAAP,YAAAM,EAAA,GAAjD8J,EAAc7J,EAAA,GAAE8J,EAAiB9J,EAAA,GACxC+J,EAAwCxK,mBAAS,IAAGyK,EAAAvK,YAAAsK,EAAA,GAA7C7H,EAAY8H,EAAA,GAAEC,EAAeD,EAAA,GACpCE,EAA0B3K,mBAAS,IAAG4K,EAAA1K,YAAAyK,EAAA,GAA/B/H,EAAKgI,EAAA,GAAEC,EAAQD,EAAA,GACtBE,EAA8B9K,mBAAS,IAAG+K,EAAA7K,YAAA4K,EAAA,GAAnCjI,EAAOkI,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,EAA4BjL,mBAAS,IAAGkL,EAAAhL,YAAA+K,EAAA,GAAjC7J,EAAM8J,EAAA,GAAEC,EAASD,EAAA,GAElBE,GAAmBC,mBACnBC,GAAmBD,mBACnBE,GAAgBF,mBAChBG,GAAkBH,mBAClBI,GAAiBJ,mBAAS,SAEjBK,GAAYlH,EAAAwB,GAAA,OAAA2F,GAAAjH,MAAA,KAAAC,UAAA,UAAAgH,KAmB1B,OAnB0BA,GAAA/G,YAAAC,cAAAC,MAA3B,SAAAC,EAA6B6G,EAAUC,GAAW,IAAFjM,EAAAC,EAAAC,EAAA,OAAA+E,cAAAM,MAAA,SAAAC,GAAE,cAAFA,EAAAC,KAAAD,EAAAE,MAAE,KAAF,SAAAF,EAAAE,KAAA,EAEhB6B,EAAiB0E,EAAW1F,GAAS,KAAD,EAShE,OATMvG,EAAawF,EAAAO,KACnB4E,EAAkB,GAADjG,OAAAwH,YAAKxB,GAAc,CAAE1K,KAQtCwF,EAAAE,KAAA,EAE0BmC,EAAuB7H,EAAeoF,GAAQ,KAAD,EACxB,OADzCnF,EAAWuF,EAAAO,KACjB+E,EAAgB,GAADpG,OAAAwH,YAAKnJ,GAAY,CAAE9C,KAAauF,EAAAE,KAAA,GAE5B8C,EAAgBvI,EAAa8C,EAAcC,EAAOoC,GAAQ,KAAD,GAAtElF,EAAIsF,EAAAO,KACVkF,EAAS,GAADvG,OAAAwH,YAAKlJ,GAAK,CAAE9C,KAAM,yBAAAsF,EAAAU,OAAA,GAAAf,EAAA,MAE7BL,MAAA,KAAAC,UAAA,CAED,IAAMoH,GAAe,eAAAC,EAAApH,YAAAC,cAAAC,MAAG,SAAAmH,EAAgBJ,GAAS,IAAAD,EAAA,OAAA/G,cAAAM,MAAA,SAAA+G,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,OAWlB,OAV3B8F,GAAiB/M,QAAQC,MAAM0D,QAAU,OACzC7D,EAAcqN,IACdrN,EAAcsN,IAERG,EAAWO,IAAIC,gBAAgBP,GACrCxB,EAAU,GAAD/F,OAAAwH,YAAK1B,GAAM,CAAEwB,KAGtBrB,EAAkB,GAADjG,OAAAwH,YAAKxB,GAAc,CAAE,QACtCI,EAAgB,GAADpG,OAAAwH,YAAKnJ,GAAY,CAAE,QAClCkI,EAAS,GAADvG,OAAAwH,YAAKlJ,GAAK,CAAE,QAAOsJ,EAAA5G,KAAA,GAErBoG,GAAaE,EAAUC,GAAW,KAAD,GAEvCT,GAAiB/M,QAAQC,MAAM0D,QAAU,SACzCtD,EAAa8M,IACb9M,EAAa+M,IACbY,WAAWrN,EAAgB,KAAM,yBAAAkN,EAAApG,OAAA,GAAAmG,EAAA,KACpC,gBAnBoBnF,GAAA,OAAAkF,EAAAtH,MAAA,KAAAC,UAAA,KAqBf2H,GAAc,eAAAlF,EAAAxC,YAAAC,cAAAC,MAAG,SAAAyH,IAAA,IAAA1J,EAAAzB,EAAA,OAAAyD,cAAAM,MAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,OAG+B,OAFlDiG,GAAclN,QAAQC,MAAM0D,QAAU,OACtCoJ,GAAiB/M,QAAQC,MAAM0D,QAAU,OACzCsJ,GAAiBjN,QAAQC,MAAM0D,QAAU,SAASwK,EAAAlH,KAAA,EAE5ByD,EAAmBpG,EAAcqC,GAAQ,KAAD,EAG1C,OAHdnC,EAAO2J,EAAA7G,KACb2F,GAAiBjN,QAAQC,MAAM0D,QAAU,OACzCgJ,EAAWnI,GACXY,QAAQC,IAAIb,GAAQ2J,EAAAlH,KAAA,GAECiE,EAAkB1G,EAASmC,GAAQ,KAAD,GAAjD5D,EAAMoL,EAAA7G,KACZwF,EAAU/J,GACVqC,QAAQC,IAAItC,GAAO,yBAAAoL,EAAA1G,OAAA,GAAAyG,EAAA,KACtB,kBAbmB,OAAAnF,EAAA1C,MAAA,KAAAC,UAAA,KAoBd8H,GAAoB,WACtBpC,EAAU,IACVE,EAAkB,IAClBG,EAAgB,IAChBG,EAAS,IACTG,EAAW,GACf,EA6BA,OAhBApK,qBAAU,WAEN,IAAM8L,EAAuB,eAAAC,EAAA/H,YAAAC,cAAAC,MAAG,SAAAuC,IAAA,IAAAX,EAAA,OAAA7B,cAAAM,MAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EACLuB,EAAiBV,GAAQ,OAKF,OALxCO,EAAQY,EAAA3B,KACdlC,QAAQC,IAAIgD,IACK,IAAbA,EACAyD,GAAc,GAEdkC,WAAWK,EAAyB,KAAMpF,EAAA1B,OAAA,SAEvCc,GAAQ,wBAAAY,EAAAxB,OAAA,GAAAuB,EAAA,KAClB,kBAT4B,OAAAsF,EAAAjI,MAAA,KAAAC,UAAA,KAU7B+H,IACAvC,GAAc,EAClB,GAAG,IAGC3K,cAAA,OAAKF,UAAU,MAAMhB,MAAO,CAAC4C,UAAU,QAAQ3B,SAExB,IAAnBsD,EAAQxB,OAEJ6I,EAEI7K,eAAA4B,WAAA,CAAA1B,SAAA,CACAF,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAE1B6K,EAAOwC,KAAI,SAACjN,EAAOkN,GAAK,OACpBrN,cAACC,EAAI,CAAaE,MAAOyK,EAAOyC,GAAQjN,cAAe0K,EAAeuC,GAC9DhN,YAAa8C,EAAakK,GAAQ/M,KAAM8C,EAAMiK,IAD3CA,EACoD,IAGnErN,cAAA,UAAQF,UAAU,iBAAiBwN,IAAK1B,GAAkB2B,QAAST,GAAgBhO,MAAO,CAAC,QAAW,OAAQ,aAAe,OAAQ,UAAY,QAASiB,SAAC,yCAC3JF,eAAA,OAAKC,UAAU,SAAUwN,IAAKxB,GAAmBhN,MAAO,CAAC,QAAW,OAAQ,cAAgB,QAAQiB,SAAA,CAChGC,cAAA,MAAAD,SAAI,+BACJC,cAACJ,EAAO,UAGhBC,eAAA,OAAKyN,IAAKvB,GAAchM,SAAA,CACpBC,cAAA,OAAKF,UAAU,gBACfD,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CAC/BC,cAAA,OAAKsN,IAAKtB,GAAgBjM,SACtBC,cAACwN,IAAa,CAACC,oBAAqBlB,OAExCvM,cAAA,UAAQF,UAAU,gBAAgBwN,IAAKrB,GAAgBsB,QAtDnD,WACxB3B,GAAiB/M,QAAQC,MAAM0D,QAAU,OACzCyK,IACJ,EAmD4GlN,SAChFC,cAAA,YAAU0N,KAAK,QAAQ5O,MAAO,CAACwD,SAAU,qBAMrDzC,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACvBC,cAAA,MAAAD,SAAI,2BACJC,cAACJ,EAAO,OAGhBC,eAAA,OAAKC,UAAU,WAAUC,SAAA,CAErBC,cAAA,MAAAD,SAAI,6BACJC,cAAC2N,IAAS,CAAC7O,MAAO,CAAC,MAAU,MAAO,OAAU,SAAU8O,SAAS,uCAAkB7N,SAC/EC,cAACkD,EAAY,CAACC,aAAcA,EAAcC,MAAOA,EAAOC,QAASA,MAErErD,cAAA,OAAKF,UAAU,gBAAgBhB,MAAO,CAAC,OAAS,OAAQ,OAAU,SAASiB,SACvEC,cAAC2B,EAAM,CAACC,OAAQA,MAEpB/B,eAAA,OAAKf,MAAO,CAAC,aAAe,QAAQiB,SAAA,CAChCC,cAAA,UAAQF,UAAU,iBAAiByN,QAzFtB,WACzB/B,EAAW,IACXG,EAAU,GACd,EAsFiF5L,SAAC,6BAClEC,cAAC6N,IAAe,CAACzO,SAAUY,cAACkD,EAAY,CAACC,aAAcA,EAAcC,MAAOA,EAAOC,QAASA,IAAYuK,SAAS,uCAAkB7N,SAClI,SAAA+N,GAAOA,EAAJjH,KAASiH,EAAHC,IAAT,IAAcC,EAAOF,EAAPE,QAAcF,EAAL1G,MAAK,OACzB4G,EAAU,GAAKhO,cAAA,UAAQF,UAAU,iCAAgCC,SAAC,wCAAe,IAGrFC,cAAA,UAAQF,UAAU,iCAAiCyN,QA7E3C,WACpBN,KACAxC,EAAW,IACXD,EAAU,GACd,EAyE4FzK,SAAC,oCAMjG,ECnGekO,EAtFI,SAAH/N,GAAiC,IAA5BsK,EAAStK,EAATsK,UAAWC,EAAUvK,EAAVuK,WAEtByD,EAAarC,mBACbsC,EAAYtC,mBACZuC,EAAgBvC,mBAChBwC,EAAiBxC,mBACjByC,EAAkBzC,mBAElB0C,EAAS,eAAA/B,EAAApH,YAAAC,cAAAC,MAAG,SAAAmH,IAAA,IAAAjH,EAAAmB,EAAA6H,EAAAC,EAAA,OAAApJ,cAAAM,MAAA,SAAA+G,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,OAG8B,GAH9B4G,EAAA7G,KAAA,EAEJL,EAAS2I,EAAUtP,QAAQ6P,MAC3B/H,EAAUuH,EAAWrP,QAAQ6P,MACb,IAAlBlJ,EAAO3D,QAAmC,IAAnB8E,EAAQ9E,OAAY,CAAA6K,EAAA5G,KAAA,SAGI,OAF/CsI,EAAcvP,QAAQC,MAAM0D,QAAU,SACtC6L,EAAexP,QAAQC,MAAM0D,QAAU,OACvC8L,EAAgBzP,QAAQC,MAAM0D,QAAU,OAAOkK,EAAAtG,OAAA,kBAI/CgI,EAAcvP,QAAQC,MAAM0D,QAAU,OAAO,eAAAkK,EAAA5G,KAAA,GAEvBf,EAAeS,GAAQ,KAAD,GAA/B,OAAXgJ,EAAW9B,EAAAvG,KAAAuG,EAAA5G,KAAA,GACUS,EAAgBI,GAAQ,QAA7C8H,EAAY/B,EAAAvG,MAEE,IAAhBqI,IAAyC,IAAjBC,GACxBjE,EAAUhF,GACViF,EAAW9D,GACX0H,EAAexP,QAAQC,MAAM0D,QAAU,OACvC8L,EAAgBzP,QAAQC,MAAM0D,QAAU,SAIpC6L,EAAexP,QAAQC,MAAM0D,SADb,IAAhBgM,EACuC,SAEA,OAEvCF,EAAgBzP,QAAQC,MAAM0D,SADb,IAAjBiM,EACwC,SAEA,QAC/C/B,EAAA5G,KAAA,iBAAA4G,EAAA7G,KAAA,GAAA6G,EAAArG,GAAAqG,EAAA,SAGDzI,QAAQC,IAAGwI,EAAArG,IAAO,yBAAAqG,EAAApG,OAAA,GAAAmG,EAAA,mBAEzB,kBApCc,OAAAD,EAAAtH,MAAA,KAAAC,UAAA,KAsCTwJ,EAAa,eAAA/G,EAAAxC,YAAAC,cAAAC,MAAG,SAAAyH,EAAO6B,GAAK,OAAAvJ,cAAAM,MAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,OACZ,UAAd8I,EAAMC,KACNN,IAAW,wBAAAvB,EAAA1G,OAAA,GAAAyG,EAAA,KAClB,gBAHkB/H,GAAA,OAAA4C,EAAA1C,MAAA,KAAAC,UAAA,KAKb2J,EAAW,eAAA3B,EAAA/H,YAAAC,cAAAC,MAAG,SAAAuC,EAAO+G,GAAK,OAAAvJ,cAAAM,MAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,OAC5ByI,IAAW,wBAAAzG,EAAAxB,OAAA,GAAAuB,EAAA,KACd,gBAFgBrB,GAAA,OAAA2G,EAAAjI,MAAA,KAAAC,UAAA,KAIjB,OACItF,eAAA,OAAKC,UAAU,wBAAuBC,SAAA,CAClCC,cAAA,MAAAD,SAAI,yCACJC,cAAA,SAAKA,cAAA,SACLH,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9BF,eAAA,QAAAE,SAAA,CAAM,mCACkCC,cAAA,SAAOiH,KAAK,OAAO8H,UAAWJ,EAAerB,IAAKa,OAE1FnO,cAAA,SAAKA,cAAA,SACLH,eAAA,QAAAE,SAAA,CAAM,2BACwBC,cAAA,SAAOiH,KAAK,OAAO8H,UAAWJ,EAAerB,IAAKY,UAGpFlO,cAAA,SAAKA,cAAA,SACLA,cAAA,UAAQuN,QAASuB,EAAY/O,SAAC,iBAC9BF,eAAA,OAAKC,UAAU,QAAQwN,IAAKc,EAAetP,MAAO,CAAC,QAAW,QAAQiB,SAAA,CAClEC,cAAA,MAAIlB,MAAO,CAAC,MAAQ,OAAOiB,SAAC,WAC5BC,cAAA,KAAGlB,MAAO,CAAC,MAAQ,OAAOiB,SAAC,wDAE/BF,eAAA,OAAKC,UAAU,QAAQwN,IAAKe,EAAgBvP,MAAO,CAAC,QAAW,QAAQiB,SAAA,CACnEC,cAAA,MAAIlB,MAAO,CAAC,MAAQ,OAAOiB,SAAC,WAC5BC,cAAA,KAAGlB,MAAO,CAAC,MAAQ,OAAOiB,SAAC,8DAE/BF,eAAA,OAAKC,UAAU,QAAQwN,IAAKgB,EAAiBxP,MAAO,CAAC,QAAW,QAAQiB,SAAA,CACpEC,cAAA,MAAIlB,MAAO,CAAC,MAAQ,OAAOiB,SAAC,WAC5BC,cAAA,KAAGlB,MAAO,CAAC,MAAQ,OAAOiB,SAAC,oEAI3C,EClEeiP,EAtBG,SAACjB,EAAKkB,GAAwD,IAA7CC,IAAK/J,UAAAtD,OAAA,QAAAsN,IAAAhK,UAAA,KAAAA,UAAA,GAASiK,EAAWjK,UAAAtD,OAAA,QAAAsN,IAAAhK,UAAA,GAAAA,UAAA,GAAG,YAC7D/D,qBAAU,WACR,IAAMiO,EAASjQ,SAASC,cAAc,UActC,OAZAgQ,EAAO7N,IAAMuM,EAEbsB,EAAOH,MAAQA,EAEXD,IACFI,EAAOJ,UAAYA,GAGrBI,EAAOD,YAAcA,EAErBhQ,SAASE,KAAKC,YAAY8P,GAEnB,WACLjQ,SAASE,KAAKgQ,YAAYD,EAC5B,CACF,GAAG,CAACtB,EAAKkB,EAAWC,EAAOE,GAC7B,ECMeG,MAlBf,WAEIP,EAAU,mEACV,IAAAzO,EAA4BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjCiF,EAAM/E,EAAA,GAAE+J,EAAS/J,EAAA,GACxBG,EAA8BJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAAnC+F,EAAO9F,EAAA,GAAE4J,EAAU5J,EAAA,GAE1B,OACIb,cAAA,OAAKF,UAAU,MAAMhB,MAAO,CAAC4C,UAAU,QAAQ3B,SACzCyF,EAAO3D,QAAU8E,EAAQ9E,OAEvB7B,cAACuK,EAAe,CAAC/E,OAAQA,EAAQmB,QAASA,EAAS6D,UAAWA,EAAWC,WAAYA,IAErFzK,cAACiO,EAAU,CAACzD,UAAWA,EAAWC,WAAYA,KAI9D,ECde+E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,SAAAzP,GAAkD,IAA/C0P,EAAM1P,EAAN0P,OAAQC,EAAM3P,EAAN2P,OAAQC,EAAM5P,EAAN4P,OAAQC,EAAM7P,EAAN6P,OAAQC,EAAO9P,EAAP8P,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJaQ,IAASC,WAAW9Q,SAAS+Q,eAAe,SACpDC,OACHpQ,cAACqQ,IAAMC,WAAU,CAAAvQ,SACfC,cAACuP,EAAG,OAORC,G","file":"static/js/main.4b84fd41.chunk.js","sourcesContent":["\nfunction padTo2Digits(num) {\n  return num.toString().padStart(2, '0');\n}\n\nfunction formatDate(date) {\n  return (\n    [\n    //   date.getFullYear(),\n      padTo2Digits(date.getMonth() + 1),\n      padTo2Digits(date.getDate()),\n    ].join('/') +\n    ' ' +\n    [\n      padTo2Digits(date.getHours()),\n      padTo2Digits(date.getMinutes()),\n      padTo2Digits(date.getSeconds()),\n    ].join(':')\n  );\n}\n\nfunction disableButton(buttonRef) {\n  buttonRef.current.style.cursor = \"not-allowed\";\n  buttonRef.current.style.pointerEvents = \"none\";\n  buttonRef.current.style.opacity = \"0.4\";\n}\n\nfunction enableButton(buttonRef) {\n  buttonRef.current.style.cursor = \"pointer\";\n  buttonRef.current.style.pointerEvents = \"auto\";\n  buttonRef.current.style.opacity = \"1\";\n}\n\nconst onRenderDocument = ({blob, filename}) => {\n  var blobUrl = URL.createObjectURL(blob);\n  saveDocument(blobUrl, filename);\n};\n\nconst saveDocument = (function () {\n  var a = document.createElement(\"a\");\n  document.body.appendChild(a);\n  a.style = \"display: none\";\n  return function (blob, fileName) {\n    a.href = blob;\n    a.download = fileName;\n    a.click();\n    window.URL.revokeObjectURL(blob);\n  };\n}());\n\nconst scrollToBottom = () => {\n  window.scrollTo(0, document.body.scrollHeight);\n};\n\nfunction fileToBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      const base64String = reader.result.split(',')[1];\n      resolve(base64String);\n    };\n    reader.onerror = (error) => {\n      reject(error);\n    };\n  });\n}\n\nexport {formatDate, disableButton, enableButton, onRenderDocument, saveDocument, scrollToBottom, fileToBase64};","import '../App.css';\nimport React from \"react\";\n\nconst Loading = () => {\n\treturn (\n\t\t<div className=\"spinner\">\n\t\t\t<div className=\"bounce1\"></div>\n\t\t\t<div className=\"bounce2\"></div>\n\t\t\t<div className=\"bounce3\"></div>\n\t\t</div>\t\t\t\t\t\t\n\t)\n}\n\nexport default Loading;","import '../App.css';\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\n\nimport {formatDate} from '../functions/Utils';\nimport Loading from './Loading';\n\nconst Chat = ({audio, transcription, translation, chat}) => {\n\tconst [transcriptionTime, setTranscriptionTime] = useState(\"\");\n\tconst [translationTime, setTranslationTime] = useState(\"\");\n\tconst [chatTime, setChatTime] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tconst date = new Date();\n\t\tsetTranscriptionTime(formatDate(date));\n\t}, [transcription]);\n\t\n\tuseEffect(() => {\n\t\tconst date = new Date();\n\t\tsetTranslationTime(formatDate(date));\n\t}, [translation])\n\n\tuseEffect(() => {\n\t\tconst date = new Date();\n\t\tsetChatTime(formatDate(date));\n\t}, [chat])\n\n\treturn (\n\t\t<div style={{margin:\"20px\"}}>\n\t\t\t{/* <div className='msg-inbox'>\n\t\t\t<div className='chats'> */}\n\t\t\t<div className='msg-page'>\n\t\t\t\t<div className=\"sent-chats\">\n\t\t\t\t\t<div className='sent-chats-msg'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t// Set this to be null to avoid situation that return is empty\n\t\t\t\t\t\taudio !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t<audio controls=\"True\" src={audio}></audio>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<Loading/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\ttranscription !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<p>{transcription}</p>\n\t\t\t\t\t\t\t\t{/* <span className=\"chat-time\">{transcriptionTime}</span> */}\n\t\t\t\t\t\t\t\t{translation !== null\n\t\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<p style={{marginTop:\"1px\"}}>{translation}</p>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"chat-time\">{translationTime}</span>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</>\t\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<Loading/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\taudio !== null\n\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t<Loading/>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='sent-chats-img'>\n\t\t\t\t\t\t<img className='chats-img' src=\"old.png\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* <div className=\"sent-chats\">\n\t\t\t\t\t{\n\t\t\t\t\ttranslation !== null\n\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='sent-chats-msg'>\n\t\t\t\t\t\t\t\t<div className='sent-msg-inbox'>\n\t\t\t\t\t\t\t\t\t<p>{translation}</p>\n\t\t\t\t\t\t\t\t\t<span className=\"chat-time\">{translationTime}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='sent-chats-img'>\n\t\t\t\t\t\t\t\t<img className='chats-img' src=\"chatgpt.png\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t: \n\t\t\t\t\t\t\ttranscription !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t<Loading/>\t\t\t\t\t\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t</div> */}\n\t\t\t\t<div className=\"received-chats\">\n\t\t\t\t\t{\n\t\t\t\t\tchat !== null\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='received-chats-img'>\n\t\t\t\t\t\t\t\t<img className='chats-img' src=\"chatgpt.png\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='received-msg'>\n\t\t\t\t\t\t\t\t<div className='received-msg-inbox'>\n\t\t\t\t\t\t\t\t\t<p>{chat}</p>\n\t\t\t\t\t\t\t\t\t<span className=\"chat-time\">{chatTime}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t: \n\t\t\t\t\t\ttranslation !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t<Loading/>\t\t\t\t\t\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t{/* </div>\n\t\t\t</div> */}\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default Chat;","import '../App.css';\nimport React from \"react\";\n\nimport Loading from './Loading';\n\nconst Clinic = ({clinic}) => {\n\n\treturn (\n\t\t<div style={{margin:\"20px\"}}>\n\t\t\t<div className='msg-page'>\n\t\t\t\t<div className=\"clinic-chats\">\n\t\t\t\t\t{\n\t\t\t\t\tclinic.length > 0\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='clinic-chats-image'>\n\t\t\t\t\t\t\t\t<img className='clinic-img' src=\"chatgpt.png\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='clinic-msg'>\n\t\t\t\t\t\t\t\t<div className='received-msg-inbox'>\n\t\t\t\t\t\t\t\t\t<p>{clinic}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t: \n\t\t\t\t\t\t<div className='center'>\n\t\t\t\t\t\t<h2>Wait for clinic scheduling</h2>\n\t\t\t\t\t\t<Loading/>\n\t\t\t\t\t\t</div>\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default Clinic;","import '../App.css';\nimport React from \"react\";\n\nimport { onRenderDocument } from '../functions/Utils';\nimport { Page, Text, View, Document, StyleSheet, PDFViewer, Font } from '@react-pdf/renderer';\n\n// localhost\n// import font from \"./SourceHanSansTC-VF.ttf\"\n\nFont.register({\n    family: 'NotoSansTC-Regular',\n    src: 'SourceHanSansTC-VF.ttf'\n    // src: font\n});\n\nconst styles = StyleSheet.create({\n    page: {\n        padding: 40,\n        fontSize: 12,\n\t\tfontFamily: \"NotoSansTC-Regular\",\n        display: \"block\"\n    },\n    title: {\n        color: \"blue\",\n        fontWeight: \"bold\",\n        paddingBottom: 3,\n        marginBottom: 20,\n        fontSize: 24,\n        textAlign: \"center\",\n        letterSpacing: \"2px\"\n    },\n    text: {\n        // width: \"100px\",\n        fontSize: 15,\n        letterSpacing: \"1px\",\n        lineHeight: \"1.5px\"\n    },\n});\n\nconst ReportViewer = ({translations, chats, summary}) => {\n    const addNewline = (text) => {\n        var textLine = \"\"\n        const lines =  text.split(\"\\n\")\n        console.log(lines)\n        for (let i = 0; i < lines.length; i++){\n            const subline = lines[i].match(/.{1,30}/g) ?? [];\n            for (let j = 0; j < subline.length; j ++)\n                textLine += subline[j] + \"\\n\"\n        }\n        return textLine;\n    }\n\treturn (\n    <Document >\n        <Page size=\"A4\" style={styles.page}>\n            <View style={{flexDirection:'column', justifyContent: 'space-between', flexWrap: 'wrap'}}>\n                <View style={styles.title}>\n                <Text> ChatGPT 問診紀錄 </Text>\n                </View>\n                <View style={styles.text}>\n                <Text>{addNewline(summary)}</Text>\n                </View>\n            </View>\n        </Page>\n    </Document>\n\n\t)\n}\n\nexport default ReportViewer;","const ClinicSchedule = [\n\t\"科別：婦產部 專長：一般婦女疾病 門診時間：星期日上午 7:30~9:00  看診醫師：戴柔\",\n\t\"科別：骨科部 專長：一般骨科 門診時間：星期四上午 5:00~7:00  看診醫師：王棣\",\n\t\"科別：小兒部 專長：一般小兒病 門診時間：星期日上午 6:30~8:00  看診醫師：林明\",\n\t\"科別：骨科部 專長：骨外傷科 門診時間：星期日上午 6:30~8:00  看診醫師：張訓\",\n\t\"科別：內科部 專長：高血脂、腦血管疾病 門診時間：星期二早上 10:45~11:30  看診醫師：劉彬\",\n\t\"科別：內科部 專長：腸胃手術、消化系統、腹瀉 門診時間：星期五早上 8:00~9:30  看診醫師：李家\",\n\t\"科別：內科部 專長：腎臟、感染症、 門診時間：星期三下午 15:30~16:50  看診醫師：周監\",\n\t\"科別：內科部 專長：呼吸系統、氣喘、過敏 門診時間：星期六下午13:00~14:30  看診醫師：郭成\",\n\t\"科別：眼科 專長：一般眼科、角膜、白內障 門診時間：星期二下午14:30~15:50  看診醫師：胡蓉\",\n\t\"科別：外科部 專長：神經外科 門診時間：星期一上午9:30~10:30 看診醫師：賴明\",\n\t\"科別：外科部 專長：胸腔外科、肝膽外科、胃腸外科 門診時間：星期五上午9:00~10:30  看診醫師：李銘\",\n\t\"科別：外科部 專長：整型外科 門診時間：星期三下午17:00~18:00  看診醫師：謝祥\",\t\t\n\t\"科別：外科部 專長：手外科 門診時間：星期四晚上19:30~20:30  看診醫師：謝賢\",\t\n\t\"科別：外科部 專長：燙傷外科 門診時間：星期二上午8:30~9:30  看診醫師：楊永健\",\t\n\t\"科別：外科部 專長：心臟外科 門診時間：星期三下午13:30~15:00  看診醫師：陳祥\",\t\n\t\"科別：外科部 專長：乳房外科 門診時間：星期四晚上19:00~20:00 看診醫師：黃升\",\t\n\t\"科別：環境暨職業醫學部 專長：職業性壓力、過勞、精神疾患 門診時間：星期五早上10:00~12:00  看診醫師：杜禮\",\t\n\t\"科別：老年醫學部 專長：老年常見疾病 門診時間：星期三下午15:30~16:30  看診醫師：陳豪\",\t\n\t\"科別：精神醫學部 專長：失智症、憂鬱症、焦慮、幻聽、認知障礙 門診時間：星期五上午9:00~10:00  看診醫師：黃正\",\t\n\t\"科別：復健部 專長：一般復健 門診時間：星期五晚上20:00~21:00  看診醫師：王貴\",\t\n\t\"科別：皮膚部 專長：一般皮膚科 門診時間：星期一晚上19:30~20:30  看診醫師：陳菁\",\t\n\t\"科別：牙科部 專長：一般牙科 門診時間：星期三早上9:00~11:00  看診醫師：陳慧\",\t\n\t\"科別：泌尿部 專長：一般泌尿科 門診時間：星期四晚上18:00~19:00  看診醫師：劉彬\",\n\t\"科別：耳鼻喉部 專長：一般耳鼻喉科 門診時間：星期五晚上17:00~19:00  看診醫師：林峰\",\n\t\"科別：腫瘤醫學部 專長：一般腫瘤 門診時間：星期二早上7:30~9:00  看診醫師：盧伸\",\t\t\n]\n\nexport default ClinicSchedule","import axios from \"axios\";\n\nimport { createSilentAudio } from 'create-silent-audio';\nimport ClinicSchedule from \"../data/ClinicSchedule\";\n\n// OpenAI chatgpt\nconst chatgptModel = \"gpt-3.5-turbo\";\nconst urlForChatgpt = \"https://api.openai.com/v1/chat/completions\";\n\n// Huggingface whisper\n// TODO: This key will only valid for 3 days\nconst corsApiKey = \"temp_51410de77c21fa5c219c4260fb4628dc\"\nconst corsProxy = \"https://4e48-114-36-131-122.ngrok-free.app/\"\n\n\n// Hugging Face\nconst urlForWhisper = `${corsProxy}https://z6jdmt46g8ep02t7.us-east-1.aws.endpoints.huggingface.cloud`;\n// const urlForWhisper = \"https://api-inference.huggingface.co/models/Evan-Lin/whisper-large-v1-tw\";\n\n// OpenAI whisper\nconst whisperModel = \"whisper-1\";\n// const urlForWhisper = \"https://api.openai.com/v1/audio/transcriptions\";\n\n// Local\n// const urlForWhisper = \"https://7e9a-114-36-122-223.ngrok-free.app\"\n\nasync function validateApiKey(apiKey){\n  try{\n      const headers = {\n          \"content-type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n      };\n      const messages = [\n              {\"role\": \"user\", \"content\": \"Hello!\"}\n          ]\n      const jsonData = {messages: messages, model: chatgptModel}\n      const response = await axios.post(urlForChatgpt, jsonData, { headers:headers })\n      return true;\n  }\n  catch (error) {\n      console.log(error);\n      return false;\n  }\n}\n\nasync function validateHfToken(hfToken){\n    try{\n\t\tconst fakeAudio = createSilentAudio(5, 44100);\n        const blob = new Blob([fakeAudio], {type: \"audio/webm;codecs=opus\"});\n\n        const headers = {\n\t\t\t\"Authorization\": `Bearer ${hfToken}`,\n            \"Content-Type\": \"audio/webm;codecs=opus\",\n            \"x-cors-api-key\": corsApiKey    \n\t\t};   \n\n\t\tconst response = await axios.post(urlForWhisper, blob, {\"headers\": headers})\n        return true\n\t}\n\tcatch (error){\n\t\tconsole.log(error.response.data.error);\n\t\tif (error.response.data.error === \"Authorization header is correct, but the token seems invalid\")\n\t\t\treturn false\n\t\telse \n\t\t\treturn true\n\t}\n}\n\nasync function checkModelStatus(hfToken){\n    try{\n\t\tconst fakeAudio = createSilentAudio(5, 44100);\n        const blob = new Blob([fakeAudio], {type: \"audio/webm;codecs=opus\"});\n\n        const headers = {\n\t\t\t\"Authorization\": `Bearer ${hfToken}`,\n            \"Content-Type\": \"audio/webm;codecs=opus\",\n            \"x-cors-api-key\": corsApiKey   \n\t\t};   \n\n\t\tconst response = await axios.post(urlForWhisper, blob, {\"headers\": headers})\n\t\tconsole.log(response.status)\n        return true\n\t}\n\tcatch (error){\n        console.log(error)\n\t\tconsole.log(error.response.status);\n\t\tif (error.response.status === 503)\n\t\t\treturn false\n\t\telse \n\t\t\treturn true\n\t}\n}\n\nconst sendAudioRequestOpenAi = async function (blob, apiKey) {      \n    const headers = {\n        \"content-type\":  \"multipart/form-data\",\n        \"Authorization\": `Bearer ${apiKey}`\n    //   \"Authorization\": `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n    };    \n    const formData = new FormData();\n    formData.append(\"file\", blob , \"audio.mp3\")\n    formData.append(\"model\", whisperModel)\n    formData.append(\"language\", \"zh\")\n\n    try{\n        const response = await axios.post(urlForWhisper, formData, {\"headers\": headers})\n        const transcription = response.data.text;    \n        return transcription\n    }\n    catch (error){\n        console.log(error)\n        if (error.response.status === 429){\n            const response = await axios.post(urlForWhisper, formData, {\"headers\": headers})\n            const transcription = response.data.text \n            return transcription\n        }\n        else \n            return \"\"\n    }\n}\n\nconst sendAudioRequestLocal = async function (blob) {      \n    try{\n        const headers = {\n            \"content-type\":  \"multipart/form-data\",\n        };   \n        const formData = new FormData();\n        formData.append(\"audio_file\", blob , \"audio.wav\")\n\n        const response = await axios.post(urlForWhisper, formData, {\"headers\": headers})\n        const transcription = response.data.text;    \n        return transcription\n\n    }\n    catch (error){\n        console.log(error);\n    }\n}\n\nconst sendAudioRequest = async function (blob, hfToken) {      \n    try{\n\n        // const headers = {\n        //     // \"content-type\":  \"multipart/form-data\",\n        //     // \"content-type\": \"audio/mpeg\",\n        //     \"accept\": \"application/json\",\n        //     \"authorization\": `Bearer ${hfToken}`,\n        // };    \n        // const formData = new FormData();\n        // const audiofile = new File([blob], \"audiofile.mp3\", {\n        //     type: \"audio/mpeg\",\n        // });\n        // formData.append(\"inputs\", audiofile)\n\n        // formData.append('inputs', {\n        //     uri: blob,\n        //     name: 'audio.mp3',\n        //     type: 'audio/mpeg',\n        // })\n        const headers = {\n            \"authorization\": `Bearer ${hfToken}`,\n            // \"content-type\": \"application/json\",\n            \"content-type\": \"audio/webm;codecs=opus\",\n            \"accept\": \"application/json\",\n        };    \n        \n        // const base64String = await fileToBase64(blob);\n        // console.log(base64String)\n\n\n        const response = await axios.post(urlForWhisper, blob, {\"headers\": headers})\n        const transcription = response.data.text;    \n        return transcription\n    }\n    catch (error){\n        console.log(error);\n    }\n}\n\nasync function sendTranslationRequest (transcription, apiKey) {\n    const headers = {\n        \"content-type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`\n    };\n    const messages = [\n            // TODO\n            {\"role\": \"system\", \"content\": \"Rewrite the sentence into a fluent Traditional Chinese one\"},\n            {\"role\": \"user\", \"content\": transcription}\n        ]\n    const jsonData = {messages: messages, model: chatgptModel}\n    try{\n        const response = await axios.post(urlForChatgpt, jsonData, { headers:headers })\n        const translation = response.data.choices[0].message.content\n        return translation;\n    }\n    catch (error) {\n        console.log(error);\n        if (error.response.status === 429){\n            const response = await axios.post(urlForChatgpt, jsonData, { headers:headers })\n            const translation = response.data.choices[0].message.content\n            return translation;\n        }\n        else \n            return \"\"        \n    }\n}\n\nasync function sendChatRequest(translation, translations, chats, apiKey) {\n    const headers = {\n        \"content-type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`\n    };\n    const messages = [\n                {\"role\": \"system\", \"content\": \"你是一個診前問診系統，病人會跟你說他目前的身體狀況，\\\n                                            病人通常會跟你講以下幾件事情:\\n\\n發病：什麼時候開始\\\n                                            注意到有症狀產生？誘發原因：症狀開始出現的時間點附近，\\\n                                            病人在什麼環境做了哪些事情？性質：症狀出現時的感覺、\\\n                                            症狀的特徵症狀散布：出現症狀的部位是否改變、或者隨著\\\n                                            身體的移動而有變化？嚴重程度：症狀何時最嚴重？有多嚴重？\\\n                                            \\n\\n請你利用獲得的訊息，來建立看診目標，可以從提出開放式\\\n                                            的問題開始，如果上述關於發病、誘發原因、性質、症狀散布、\\\n                                            嚴重程度有不清楚的地方，也可以請病人回答，然後觀察病人的\\\n                                            回覆，並用繁體中文給出建議。\"},\n        ]\n\n    console.log(translations)\n    // Multi-turn chats\n    // FIXME: setState() is async, so the translations here are not updated.\n    //        translations doesn't contain translation(The newest one).\n    for (let i = 0; i < translations.length; i ++){\n        messages.push({\"role\": \"user\", \"content\": translations[i]});\n        messages.push({\"role\": \"assistant\", \"content\": chats[i]});\n    }\n    messages.push({\"role\": \"user\", \"content\": translation});\n    console.log(messages)\n    const jsonData = {messages: messages, model: chatgptModel}\n    try {\n        const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n        const chat = response.data.choices[0].message.content\n        return chat;\n    }\n    catch (error){\n        console.log(error)\n        if (error.response.status === 429){\n            const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n            const chat = response.data.choices[0].message.content\n            return chat;\n        }\n        else \n            return \"\"    \n    }\n}\n\nasync function sendSummaryRequest(translations, apiKey) {\n    const headers = {\n        \"content-type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`\n    };\n    const messages = [\n                {\"role\": \"system\", \"content\": \"你是一個重點整理系統，病人會跟你說他目前的身體狀況，\\\n                                                通常會包含以下 4 個面向:\\n\\n發病時間、症狀的誘發原因、\\\n                                                症狀的性質、嚴重程度 。請你利用獲得的訊息，針對這些面向 \\\n                                                進行重點整理，最後用繁體中文給出總結（你不需要給出建議，\\\n                                                只需要客觀的統整重點即可）。\"},\n        ]\n\n    messages.push({\"role\": \"user\", \"content\": \"病人的描述：\"})\n\n    for (let i = 0; i < translations.length; i ++){\n        messages.push({\"role\": \"user\", \"content\": translations[i]});\n    }\n    console.log(messages)\n    const jsonData = {messages: messages, model: chatgptModel}\n    try {\n        const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n        const chat = response.data.choices[0].message.content\n        return chat;\n    }\n    catch (error){\n        console.log(error)\n        if (error.response.status === 429){\n            const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n            const chat = response.data.choices[0].message.content\n            return chat;\n        }\n        else \n            return \"\"    \n    }\n}\n\nasync function sendClinicRequest(summary, apiKey) {\n    const headers = {\n        \"content-type\": \"application/json\",\n        \"Authorization\": `Bearer ${apiKey}`\n    };\n    const messages = [\n                {\"role\": \"system\", \"content\": \"根據病人的描述及門診時間表，找出門診時間表中 \\\n                                        「專長」一項符合病人症狀的醫生，並告知這些醫生對應的 \\\n                                        診別及門診時間。請以繁體中文回答。\"},\n        ]\n\n    messages.push({\"role\": \"user\", \"content\": \"病人的症狀：\"});\n    messages.push({\"role\": \"user\", \"content\": summary})\n\n    messages.push({\"role\": \"user\", \"content\": \"門診時間表：\"});\n    for (let i = 0; i < ClinicSchedule.length; i ++){\n        messages.push({\"role\": \"user\", \"content\": ClinicSchedule[i]});\n    }    \n    console.log(messages)\n    const jsonData = {messages: messages, model: chatgptModel}\n    try {\n        const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n        const chat = response.data.choices[0].message.content\n        return chat;\n    }\n    catch (error){\n        console.log(error)\n        if (error.response.status === 429){\n            const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n            const chat = response.data.choices[0].message.content\n            return chat;\n        }\n        else \n            return \"\"    \n    }\n}\n\nexport {validateApiKey, checkModelStatus, sendAudioRequest,\n         sendChatRequest, sendTranslationRequest, sendAudioRequestOpenAi,\n         validateHfToken, sendSummaryRequest, sendClinicRequest, sendAudioRequestLocal};","import '../App.css';\nimport React from \"react\";\nimport { useEffect, useState, useRef } from \"react\";\n\nimport { AudioRecorder } from 'react-audio-voice-recorder';\nimport { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer';\n\nimport Chat from '../components/Chat';\nimport Clinic from '../components/Clinic';\nimport Loading from '../components/Loading';\nimport ReportViewer from '../components/ReportViewer';\n\nimport { enableButton, disableButton, scrollToBottom } from '../functions/Utils';\nimport { checkModelStatus, sendAudioRequest, sendTranslationRequest, \n        sendChatRequest, sendAudioRequestOpenAi, sendSummaryRequest,\n        sendClinicRequest, sendAudioRequestLocal } from '../api/Request';\n\nconst MessageRoomPage = ({apiKey, hfToken, setApiKey, setHfToken}) => {\n\n    const [modelReady, setModelReady] = useState(false);\n    const [audios, setAudios] = useState([]);\n    const [transcriptions, setTranscriptions] = useState([]);\n    const [translations, setTranslations] = useState([]);\n    const [chats, setChats] = useState([]);\n    const [summary, setSummary] = useState(\"\");\n    const [clinic, setClinic] = useState(\"\");\n\n    const summaryButtonRef = useRef();\n    const reportLoadingRef = useRef();\n    const bottomLineRef = useRef();\n    const recordButtonRef = useRef();\n    const clearButtonRef = useRef();\n\n    async function sendRequests (audioUrl, audioBlob){\n        // Hugging face whisper\n        const transcription = await sendAudioRequest(audioBlob, hfToken);\n        setTranscriptions([...transcriptions, transcription]); \n        \n        // OpenAI whisper\n        // const transcription = await sendAudioRequestOpenAi(audioBlob, apiKey);\n        // setTranscriptions([...transcriptions, transcription]);\n\n        // Local whisper\n        // const transcription = await sendAudioRequestLocal(audioBlob)\n        // setTranscriptions([...transcriptions, transcription])\n\n        const translation = await sendTranslationRequest(transcription, apiKey);\n        setTranslations([...translations, translation])\n\n        const chat = await sendChatRequest(translation, translations, chats, apiKey);\n        setChats([...chats, chat])\n\n    }\n\n    const addAudioElement = async function (audioBlob) {\n        summaryButtonRef.current.style.display = \"none\";\n        disableButton(recordButtonRef)\n        disableButton(clearButtonRef)\n\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudios([...audios, audioUrl]);\n\n        // enforce the length of three lists are equal\n        setTranscriptions([...transcriptions, null]);\n        setTranslations([...translations, null]);\n        setChats([...chats, null]);\n\n        await sendRequests(audioUrl, audioBlob);\n\n        summaryButtonRef.current.style.display = \"inline\";\n        enableButton(recordButtonRef)\n        enableButton(clearButtonRef)\n        setTimeout(scrollToBottom, 1000);\n    };\n\n    const generateReport = async function() {\n        bottomLineRef.current.style.display = \"none\";\n        summaryButtonRef.current.style.display = \"none\";\n        reportLoadingRef.current.style.display = \"inline\";\n        \n        const summary = await sendSummaryRequest(translations, apiKey);\n        reportLoadingRef.current.style.display = \"none\";\n        setSummary(summary);\n        console.log(summary)\n        \n        const clinic = await sendClinicRequest(summary, apiKey);\n        setClinic(clinic);\n        console.log(clinic)\n    }\n\n    const continueConversation = () => { \n        setSummary(\"\")\n        setClinic(\"\")\n    }\n\n    const clearConversation = () => {\n        setAudios([]);\n        setTranscriptions([]);\n        setTranslations([]);\n        setChats([]);\n        setSummary([]);\n    }\n\n    const restartConversation = () => {\n        summaryButtonRef.current.style.display = \"none\";\n        clearConversation()\n    }\n\n    const endConversation = () => { \n        clearConversation()\n        setHfToken(\"\")\n        setApiKey(\"\")\n    }\n\n    useEffect(() => {\n        // For Hugging face Whisper\n        const checkModelStatusWrapper = async() =>{\n            const response = await checkModelStatus(hfToken)  \n            console.log(response)\n            if (response === true) \n                setModelReady(true)\n            else\n                setTimeout(checkModelStatusWrapper, 8000);\n            \n            return response      \n        }\n        checkModelStatusWrapper();\n        setModelReady(true)\n    }, []);\n\n    return (\n        <div className=\"App\" style={{marginTop:\"30px\"}}>\n            {            \n            summary.length === 0\n            ?\n                modelReady \n                ?\n                    <>\n                    <div className='msg-container'>\n                    {\n                        audios.map((audio, index)=> (\n                            <Chat key={index} audio={audios[index]} transcription={transcriptions[index]} \n                                    translation={translations[index]} chat={chats[index]}/>\n                        ))\n                    }\n                        <button className=\"button-ellipse\" ref={summaryButtonRef} onClick={generateReport} style={{\"display\": \"none\", \"marginBottom\":\"40px\", \"marginTop\":\"40px\" }}>生成問診報告</button>\n                        <div className='center'  ref={reportLoadingRef}  style={{\"display\": \"none\", \"paddingBottom\":\"60px\"}}>\n                            <h2>Wait for report generation</h2>\n                            <Loading/>\n                        </div>\n                    </div>\n                    <div ref={bottomLineRef}>\n                        <div className='bottom-line'></div>\n                        <div className='bottom-line-button'>\n                            <div ref={recordButtonRef}>\n                                <AudioRecorder onRecordingComplete={addAudioElement}/>\n                            </div>\n                            <button className='circle-button' ref={clearButtonRef} onClick={restartConversation}  >\n                                <ion-icon name=\"trash\" style={{fontSize: \"17px\"}}></ion-icon>\n                            </button>\n                        </div>\n                    </div>\n                    </>\n                :\n                    <div className='center'>\n                    <h2>Wait for model loading</h2>\n                    <Loading/>\n                    </div>\n            :\n            <div className='msg-page'>\n                {/* PDFViewer must be outside ReportViewer or the error occurs */}\n                <h2>問診紀錄</h2>\n                <PDFViewer style={{\"width\" : \"70%\", \"height\": \"300px\"}} fileName=\"ChatGPT 問診紀錄.pdf\">\n                    <ReportViewer translations={translations} chats={chats} summary={summary}/>\n                </PDFViewer>\n                <div className='msg-container' style={{\"margin\":\"auto\", \"height\": \"200px\"}}>\n                    <Clinic clinic={clinic}></Clinic>\n                </div>\n                <div style={{\"marginBottom\":\"60px\"}}>\n                    <button className='button-ellipse' onClick={continueConversation}>繼續問診</button>       \n                    <PDFDownloadLink document={<ReportViewer translations={translations} chats={chats} summary={summary}/>} fileName=\"ChatGPT 問診紀錄.pdf\">\n                    {({ blob, url, loading, error }) =>\n                        loading ? '' : <button className='button-ellipse button-margin-1'>下載問診紀錄</button>\n                    }\n                    </PDFDownloadLink>\n                    <button className='button-ellipse button-margin-2' onClick={endConversation}>結束問診</button>\n                </div>\n            </div>\n            }   \n        </div>\n    );\n}\n\nexport default MessageRoomPage;\n","import '../App.css';\nimport React from \"react\";\nimport { useRef } from \"react\";\n\nimport { validateHfToken, validateApiKey } from '../api/Request';\n\nconst AskKeyPage = ({setApiKey, setHfToken}) => {\n\n    const hfTokenRef = useRef();\n    const apiKeyRef = useRef();\n    const emptyInputRef = useRef();\n    const apiKeyValidRef = useRef();\n    const hfTokenValidRef = useRef();\n\n    const validator = async () => {\n        try{\n            const apiKey = apiKeyRef.current.value\n            const hfToken = hfTokenRef.current.value\n            if (apiKey.length === 0 || hfToken.length === 0){\n                emptyInputRef.current.style.display = \"inline\";\n                apiKeyValidRef.current.style.display = \"none\";\n                hfTokenValidRef.current.style.display = \"none\";                    \n                return\n            }\n            else \n                emptyInputRef.current.style.display = \"none\";\n            \n            const apiKeyValid = await validateApiKey(apiKey);\n            const hfTokenValid = await validateHfToken(hfToken)\n            \n            if (apiKeyValid === true && hfTokenValid === true){\n                setApiKey(apiKey)\n                setHfToken(hfToken)\n                apiKeyValidRef.current.style.display = \"none\";\n                hfTokenValidRef.current.style.display = \"none\";\n            }\n            else {\n                if (apiKeyValid === false) \n                    apiKeyValidRef.current.style.display = \"inline\";\n                else \n                    apiKeyValidRef.current.style.display = \"none\";\n                if (hfTokenValid === false)\n                    hfTokenValidRef.current.style.display = \"inline\";\n                else\n                    hfTokenValidRef.current.style.display = \"none\";\n            }\n        }\n        catch (error){\n            console.log(error)\n        }\n    }\n\n    const handleKeyDown = async (event) => {\n        if (event.key === \"Enter\")\n            validator()\n    }\n\n    const handleClick = async (event) => {\n        validator()\n    }\n\n    return (\n        <div className=\"App ask-key-container\" >\n            <h2>診前問診系統</h2>\n            <br/><br/>\n            <div className='ask-key-component'>\n                <span>\n                    OpenAI Api Key : &nbsp; &emsp;&nbsp;<input type=\"text\" onKeyDown={handleKeyDown} ref={apiKeyRef}/>\n                </span>\n                <br/><br/>\n                <span>\n                    Huggingface Token : &nbsp;<input type=\"text\" onKeyDown={handleKeyDown} ref={hfTokenRef}/>\n                </span>\n            </div>\n            <br/><br/>\n            <button onClick={handleClick}>確認</button>\n            <div className=\"error\" ref={emptyInputRef} style={{\"display\": \"none\"}}>\n                <h3 style={{\"color\":\"red\"}}>Error!</h3>\n                <p style={{\"color\":\"red\"}}>Please ensure that both two input box are filled</p>\n            </div> \n            <div className=\"error\" ref={apiKeyValidRef} style={{\"display\": \"none\"}}>\n                <h3 style={{\"color\":\"red\"}}>Error!</h3>\n                <p style={{\"color\":\"red\"}}>Please ensure that a correct OpenAI apikey is provided</p>\n            </div> \n            <div className=\"error\" ref={hfTokenValidRef} style={{\"display\": \"none\"}}>\n                <h3 style={{\"color\":\"red\"}}>Error!</h3>\n                <p style={{\"color\":\"red\"}}>Please ensure that a correct huggingface token is provided</p>\n            </div> \n        </div>\n    );\n}\n\nexport default AskKeyPage;\n","import { useEffect } from \"react\"\n\nconst useScript = (url, integrity, async = true, crossOrigin = \"anonymous\") => {\n  useEffect(() => {\n    const script = document.createElement(\"script\")\n\n    script.src = url\n\n    script.async = async\n\n    if (integrity) {\n      script.integrity = integrity\n    }\n\n    script.crossOrigin = crossOrigin\n\n    document.body.appendChild(script)\n\n    return () => {\n      document.body.removeChild(script)\n    }\n  }, [url, integrity, async, crossOrigin])\n}\n\nexport default useScript","import './App.css';\nimport React from \"react\";\n// import dotenv_defaults from \"dotenv-defaults\";\nimport { useState } from \"react\";\n\nimport MessageRoomPage from \"./containers/MessageRoomPage\"\nimport AskKeyPage from './containers/AskKeyPage';\nimport useScript from './functions/UseScript';\n// dotenv_defaults.config();\n\nfunction App() {\n\n    useScript(\"https://cdn.jsdelivr.net/npm/ionicons/dist/ionicons/ionicons.js\")\n    const [apiKey, setApiKey] = useState(\"\");\n    const [hfToken, setHfToken] = useState(\"\");\n\n    return (\n        <div className=\"App\" style={{marginTop:\"30px\"}}>\n            { apiKey.length && hfToken.length\n                ?\n                <MessageRoomPage apiKey={apiKey} hfToken={hfToken} setApiKey={setApiKey} setHfToken={setHfToken}/>\n                :\n                <AskKeyPage setApiKey={setApiKey} setHfToken={setHfToken}/>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}